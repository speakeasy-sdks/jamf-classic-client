/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindComputersByNameRequest extends SpeakeasyBase {
    /**
     * Name to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=name" })
    name: string;
}

export class FindComputersByName200ApplicationXMLCertificatesCertificate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    commonName?: string;

    @SpeakeasyMetadata()
    expiresEpoch?: number;

    @SpeakeasyMetadata()
    expiresUtc?: string;

    @SpeakeasyMetadata()
    identify?: boolean;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByName200ApplicationXMLCertificates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    certificate?: FindComputersByName200ApplicationXMLCertificatesCertificate;
}

export class FindComputersByName200ApplicationXMLConfigurationProfilesConfigurationProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    isRemovable?: boolean;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    uuid?: string;
}

export class FindComputersByName200ApplicationXMLConfigurationProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    configurationProfile?: FindComputersByName200ApplicationXMLConfigurationProfilesConfigurationProfile;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByName200ApplicationXMLExtensionAttributesExtensionAttribute extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    type?: string;

    @SpeakeasyMetadata()
    value?: string;
}

export class FindComputersByName200ApplicationXMLExtensionAttributes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    extensionAttribute?: FindComputersByName200ApplicationXMLExtensionAttributesExtensionAttribute;
}

export class FindComputersByName200ApplicationXMLGeneralManagementStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    enrolledViaDep?: boolean;

    @SpeakeasyMetadata()
    userApprovedEnrollment?: boolean;

    @SpeakeasyMetadata()
    userApprovedMdm?: boolean;
}

export class FindComputersByName200ApplicationXMLGeneralMdmCapableUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mdmCapableUser?: string;
}

export class FindComputersByName200ApplicationXMLGeneralRemoteManagement extends SpeakeasyBase {
    @SpeakeasyMetadata()
    managed?: boolean;

    @SpeakeasyMetadata()
    managementUsername?: string;
}

export class FindComputersByName200ApplicationXMLGeneralSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

export class FindComputersByName200ApplicationXMLGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    altMacAddress?: string;

    @SpeakeasyMetadata()
    altNetworkAdapterType?: string;

    @SpeakeasyMetadata()
    assetTag?: string;

    @SpeakeasyMetadata()
    barcode1?: string;

    @SpeakeasyMetadata()
    barcode2?: string;

    @SpeakeasyMetadata()
    distributionPoint?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    initialEntryDate?: string;

    @SpeakeasyMetadata()
    initialEntryDateEpoch?: number;

    @SpeakeasyMetadata()
    initialEntryDateUtc?: string;

    @SpeakeasyMetadata()
    ipAddress?: string;

    @SpeakeasyMetadata()
    itunesStoreAccountIsActive?: boolean;

    @SpeakeasyMetadata()
    jamfVersion?: string;

    @SpeakeasyMetadata()
    lastCloudBackupDateEpoch?: number;

    @SpeakeasyMetadata()
    lastCloudBackupDateUtc?: string;

    @SpeakeasyMetadata()
    lastContactTime?: string;

    @SpeakeasyMetadata()
    lastContactTimeEpoch?: number;

    @SpeakeasyMetadata()
    lastContactTimeUtc?: string;

    @SpeakeasyMetadata()
    lastEnrolledDateEpoch?: number;

    @SpeakeasyMetadata()
    lastEnrolledDateUtc?: string;

    @SpeakeasyMetadata()
    lastReportedIp?: string;

    @SpeakeasyMetadata()
    macAddress?: string;

    @SpeakeasyMetadata()
    managementStatus?: FindComputersByName200ApplicationXMLGeneralManagementStatus;

    @SpeakeasyMetadata()
    mdmCapable?: boolean;

    @SpeakeasyMetadata()
    mdmCapableUsers?: FindComputersByName200ApplicationXMLGeneralMdmCapableUsers;

    /**
     * Name of computer
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    networkAdapterType?: string;

    @SpeakeasyMetadata()
    platform?: string;

    @SpeakeasyMetadata()
    remoteManagement?: FindComputersByName200ApplicationXMLGeneralRemoteManagement;

    @SpeakeasyMetadata()
    reportDate?: string;

    @SpeakeasyMetadata()
    reportDateEpoch?: number;

    @SpeakeasyMetadata()
    reportDateUtc?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    site?: FindComputersByName200ApplicationXMLGeneralSite;

    @SpeakeasyMetadata()
    sus?: string;

    @SpeakeasyMetadata()
    udid?: string;
}

export class FindComputersByName200ApplicationXMLGroupsAccountsComputerGroupMemberships extends SpeakeasyBase {
    @SpeakeasyMetadata()
    group?: string;
}

export class FindComputersByName200ApplicationXMLGroupsAccountsLocalAccountsUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    administrator?: boolean;

    @SpeakeasyMetadata()
    filevaultEnabled?: boolean;

    @SpeakeasyMetadata()
    home?: string;

    @SpeakeasyMetadata()
    homeSize?: string;

    @SpeakeasyMetadata()
    homeSizeMb?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    realname?: string;

    @SpeakeasyMetadata()
    uid?: string;
}

export class FindComputersByName200ApplicationXMLGroupsAccountsLocalAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: FindComputersByName200ApplicationXMLGroupsAccountsLocalAccountsUser;
}

export class FindComputersByName200ApplicationXMLGroupsAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationXMLGroupsAccountsComputerGroupMemberships,
    })
    computerGroupMemberships?: FindComputersByName200ApplicationXMLGroupsAccountsComputerGroupMemberships[];

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationXMLGroupsAccountsLocalAccounts,
    })
    localAccounts?: FindComputersByName200ApplicationXMLGroupsAccountsLocalAccounts[];
}

export class FindComputersByName200ApplicationXMLHardwareFilevault2Users extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: string;
}

export class FindComputersByName200ApplicationXMLHardwareMappedPrintersPrinter extends SpeakeasyBase {
    @SpeakeasyMetadata()
    location?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    type?: string;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindComputersByName200ApplicationXMLHardwareMappedPrinters extends SpeakeasyBase {
    @SpeakeasyMetadata()
    printer?: FindComputersByName200ApplicationXMLHardwareMappedPrintersPrinter;
}

export enum FindComputersByName200ApplicationXMLHardwareSipStatus {
    Enabled = "Enabled",
    Disabled = "Disabled",
}

export class FindComputersByName200ApplicationXMLHardwareStorageDevicePartition extends SpeakeasyBase {
    @SpeakeasyMetadata()
    bootDriveAvailableMb?: number;

    @SpeakeasyMetadata()
    filevault2Percent?: number;

    @SpeakeasyMetadata()
    filevault2Status?: string;

    @SpeakeasyMetadata()
    filevaultPercent?: number;

    @SpeakeasyMetadata()
    filevaultStatus?: string;

    @SpeakeasyMetadata()
    lvUUID?: string;

    @SpeakeasyMetadata()
    lvgUUID?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    partitionCapacityMb?: number;

    @SpeakeasyMetadata()
    percentageFull?: number;

    @SpeakeasyMetadata()
    pvUUID?: string;

    @SpeakeasyMetadata()
    size?: number;

    @SpeakeasyMetadata()
    type?: string;
}

export class FindComputersByName200ApplicationXMLHardwareStorageDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    connectionType?: string;

    @SpeakeasyMetadata()
    disk?: string;

    @SpeakeasyMetadata()
    driveCapacityMb?: number;

    @SpeakeasyMetadata()
    model?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationXMLHardwareStorageDevicePartition,
    })
    partition?: FindComputersByName200ApplicationXMLHardwareStorageDevicePartition[];

    @SpeakeasyMetadata()
    revision?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    size?: number;

    @SpeakeasyMetadata()
    smartStatus?: string;
}

export class FindComputersByName200ApplicationXMLHardwareStorage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    device?: FindComputersByName200ApplicationXMLHardwareStorageDevice;
}

export class FindComputersByName200ApplicationXMLHardware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    activeDirectoryStatus?: string;

    @SpeakeasyMetadata()
    availableRamSlots?: number;

    @SpeakeasyMetadata()
    batteryCapacity?: number;

    @SpeakeasyMetadata()
    bleCapable?: boolean;

    @SpeakeasyMetadata()
    bootRom?: string;

    @SpeakeasyMetadata()
    busSpeed?: number;

    @SpeakeasyMetadata()
    busSpeedMhz?: number;

    @SpeakeasyMetadata()
    cacheSize?: number;

    @SpeakeasyMetadata()
    cacheSizeKb?: number;

    @SpeakeasyMetadata()
    diskEncryptionConfiguration?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLHardwareFilevault2Users })
    filevault2Users?: FindComputersByName200ApplicationXMLHardwareFilevault2Users[];

    @SpeakeasyMetadata()
    gatekeeperStatus?: string;

    @SpeakeasyMetadata()
    institutionalRecoveryKey?: string;

    @SpeakeasyMetadata()
    make?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLHardwareMappedPrinters })
    mappedPrinters?: FindComputersByName200ApplicationXMLHardwareMappedPrinters[];

    @SpeakeasyMetadata()
    masterPasswordSet?: boolean;

    @SpeakeasyMetadata()
    model?: string;

    @SpeakeasyMetadata()
    modelIdentifier?: string;

    @SpeakeasyMetadata()
    nicSpeed?: string;

    @SpeakeasyMetadata()
    numberCores?: number;

    @SpeakeasyMetadata()
    numberProcessors?: number;

    @SpeakeasyMetadata()
    opticalDrive?: string;

    @SpeakeasyMetadata()
    osBuild?: string;

    @SpeakeasyMetadata()
    osName?: string;

    @SpeakeasyMetadata()
    osVersion?: string;

    @SpeakeasyMetadata()
    processorArchitechture?: string;

    @SpeakeasyMetadata()
    processorSpeed?: string;

    @SpeakeasyMetadata()
    processorSpeedMhz?: string;

    @SpeakeasyMetadata()
    processorType?: string;

    @SpeakeasyMetadata()
    servicePack?: string;

    @SpeakeasyMetadata()
    sipStatus?: FindComputersByName200ApplicationXMLHardwareSipStatus;

    @SpeakeasyMetadata()
    smcVersion?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLHardwareStorage })
    storage?: FindComputersByName200ApplicationXMLHardwareStorage[];

    @SpeakeasyMetadata()
    totalRam?: number;

    @SpeakeasyMetadata()
    totalRamMb?: number;

    @SpeakeasyMetadata()
    xprotectVersion?: string;
}

export class FindComputersByName200ApplicationXMLLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    building?: string;

    @SpeakeasyMetadata()
    department?: string;

    @SpeakeasyMetadata()
    emailAddress?: string;

    @SpeakeasyMetadata()
    phone?: string;

    @SpeakeasyMetadata()
    phoneNumber?: string;

    @SpeakeasyMetadata()
    position?: string;

    @SpeakeasyMetadata()
    realName?: string;

    @SpeakeasyMetadata()
    realname?: string;

    @SpeakeasyMetadata()
    room?: string;

    @SpeakeasyMetadata()
    username?: string;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripheralsAttachmentsAttachment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    filename?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripheralsAttachments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    attachment?: FindComputersByName200ApplicationXMLPeripheralsPeripheralsAttachmentsAttachment;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripheralsPeripheralFieldsField extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    value?: string;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripheralsPeripheralFields extends SpeakeasyBase {
    @SpeakeasyMetadata()
    field?: FindComputersByName200ApplicationXMLPeripheralsPeripheralsPeripheralFieldsField;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripheralsPeripheral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    barCode1?: string;

    @SpeakeasyMetadata()
    barCode2?: string;

    @SpeakeasyMetadata()
    fields?: FindComputersByName200ApplicationXMLPeripheralsPeripheralsPeripheralFields;

    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the peripheral type
     */
    @SpeakeasyMetadata()
    type?: string;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripheralsPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    applecareId?: string;

    @SpeakeasyMetadata()
    isLeased?: boolean;

    @SpeakeasyMetadata()
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    leaseExpires?: string;

    @SpeakeasyMetadata()
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    poDate?: string;

    @SpeakeasyMetadata()
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    poDateUtc?: string;

    @SpeakeasyMetadata()
    poNumber?: string;

    @SpeakeasyMetadata()
    purchasePrice?: string;

    @SpeakeasyMetadata()
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    purchasingContact?: string;

    @SpeakeasyMetadata()
    vendor?: string;

    @SpeakeasyMetadata()
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    warrantyExpiresUtc?: string;
}

export class FindComputersByName200ApplicationXMLPeripheralsPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationXMLPeripheralsPeripheralsAttachments,
    })
    attachments?: FindComputersByName200ApplicationXMLPeripheralsPeripheralsAttachments[];

    @SpeakeasyMetadata()
    peripheral?: FindComputersByName200ApplicationXMLPeripheralsPeripheralsPeripheral;

    @SpeakeasyMetadata()
    purchasing?: FindComputersByName200ApplicationXMLPeripheralsPeripheralsPurchasing;
}

export class FindComputersByName200ApplicationXMLPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLPeripheralsPeripherals })
    peripherals?: FindComputersByName200ApplicationXMLPeripheralsPeripherals[];

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByName200ApplicationXMLPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    applecareId?: string;

    @SpeakeasyMetadata()
    isLeased?: boolean;

    @SpeakeasyMetadata()
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    leaseExpires?: string;

    @SpeakeasyMetadata()
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    poDate?: string;

    @SpeakeasyMetadata()
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    poDateUtc?: string;

    @SpeakeasyMetadata()
    poNumber?: string;

    @SpeakeasyMetadata()
    purchasePrice?: string;

    @SpeakeasyMetadata()
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    purchasingContact?: string;

    @SpeakeasyMetadata()
    vendor?: string;

    @SpeakeasyMetadata()
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    warrantyExpiresUtc?: string;
}

export class FindComputersByName200ApplicationXMLSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata()
    activationLock?: boolean;

    @SpeakeasyMetadata()
    externalBootLevel?: string;

    @SpeakeasyMetadata()
    firewallEnabled?: boolean;

    @SpeakeasyMetadata()
    recoveryLockEnabled?: boolean;

    @SpeakeasyMetadata()
    secureBootLevel?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareApplicationsApplication extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    path?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareApplications extends SpeakeasyBase {
    @SpeakeasyMetadata()
    application?: FindComputersByName200ApplicationXMLSoftwareApplicationsApplication;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByName200ApplicationXMLSoftwareAvailableSoftwareUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareAvailableUpdatesUpdate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    packageName?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareAvailableUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    update?: FindComputersByName200ApplicationXMLSoftwareAvailableUpdatesUpdate;
}

export class FindComputersByName200ApplicationXMLSoftwareCachedByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    package?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareFontsFont extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    path?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareFonts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    font?: FindComputersByName200ApplicationXMLSoftwareFontsFont;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByName200ApplicationXMLSoftwareInstalledByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    package?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareInstalledByInstallerSwu extends SpeakeasyBase {
    @SpeakeasyMetadata()
    package?: string;
}

export class FindComputersByName200ApplicationXMLSoftwareLicensedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByName200ApplicationXMLSoftwarePluginsPlugin extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    path?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByName200ApplicationXMLSoftwarePlugins extends SpeakeasyBase {
    @SpeakeasyMetadata()
    plugin?: FindComputersByName200ApplicationXMLSoftwarePluginsPlugin;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByName200ApplicationXMLSoftwareRunningServices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByName200ApplicationXMLSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareApplications })
    applications?: FindComputersByName200ApplicationXMLSoftwareApplications[];

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationXMLSoftwareAvailableSoftwareUpdates,
    })
    availableSoftwareUpdates?: FindComputersByName200ApplicationXMLSoftwareAvailableSoftwareUpdates[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareAvailableUpdates })
    availableUpdates?: FindComputersByName200ApplicationXMLSoftwareAvailableUpdates[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareCachedByCasper })
    cachedByCasper?: FindComputersByName200ApplicationXMLSoftwareCachedByCasper[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareFonts })
    fonts?: FindComputersByName200ApplicationXMLSoftwareFonts[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareInstalledByCasper })
    installedByCasper?: FindComputersByName200ApplicationXMLSoftwareInstalledByCasper[];

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationXMLSoftwareInstalledByInstallerSwu,
    })
    installedByInstallerSwu?: FindComputersByName200ApplicationXMLSoftwareInstalledByInstallerSwu[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareLicensedSoftware })
    licensedSoftware?: FindComputersByName200ApplicationXMLSoftwareLicensedSoftware[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwarePlugins })
    plugins?: FindComputersByName200ApplicationXMLSoftwarePlugins[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLSoftwareRunningServices })
    runningServices?: FindComputersByName200ApplicationXMLSoftwareRunningServices[];

    @SpeakeasyMetadata()
    unixExecutables?: string;
}

/**
 * OK
 */
export class FindComputersByName200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLCertificates })
    certificates?: FindComputersByName200ApplicationXMLCertificates[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLConfigurationProfiles })
    configurationProfiles?: FindComputersByName200ApplicationXMLConfigurationProfiles[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationXMLExtensionAttributes })
    extensionAttributes?: FindComputersByName200ApplicationXMLExtensionAttributes[];

    @SpeakeasyMetadata()
    general?: FindComputersByName200ApplicationXMLGeneral;

    @SpeakeasyMetadata()
    groupsAccounts?: FindComputersByName200ApplicationXMLGroupsAccounts;

    @SpeakeasyMetadata()
    hardware?: FindComputersByName200ApplicationXMLHardware;

    @SpeakeasyMetadata()
    location?: FindComputersByName200ApplicationXMLLocation;

    @SpeakeasyMetadata()
    peripherals?: FindComputersByName200ApplicationXMLPeripherals;

    @SpeakeasyMetadata()
    purchasing?: FindComputersByName200ApplicationXMLPurchasing;

    @SpeakeasyMetadata()
    security?: FindComputersByName200ApplicationXMLSecurity;

    @SpeakeasyMetadata()
    software?: FindComputersByName200ApplicationXMLSoftware;
}

export class FindComputersByName200ApplicationJSONCertificatesCertificate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "common_name" })
    commonName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "expires_epoch" })
    expiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "expires_utc" })
    expiresUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "identify" })
    identify?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByName200ApplicationJSONCertificates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "certificate" })
    @Type(() => FindComputersByName200ApplicationJSONCertificatesCertificate)
    certificate?: FindComputersByName200ApplicationJSONCertificatesCertificate;
}

export class FindComputersByName200ApplicationJSONConfigurationProfilesConfigurationProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_removable" })
    isRemovable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uuid" })
    uuid?: string;
}

export class FindComputersByName200ApplicationJSONConfigurationProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "configuration_profile" })
    @Type(() => FindComputersByName200ApplicationJSONConfigurationProfilesConfigurationProfile)
    configurationProfile?: FindComputersByName200ApplicationJSONConfigurationProfilesConfigurationProfile;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByName200ApplicationJSONExtensionAttributesExtensionAttribute extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class FindComputersByName200ApplicationJSONExtensionAttributes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "extension_attribute" })
    @Type(() => FindComputersByName200ApplicationJSONExtensionAttributesExtensionAttribute)
    extensionAttribute?: FindComputersByName200ApplicationJSONExtensionAttributesExtensionAttribute;
}

export class FindComputersByName200ApplicationJSONGeneralManagementStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "enrolled_via_dep" })
    enrolledViaDep?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "user_approved_enrollment" })
    userApprovedEnrollment?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "user_approved_mdm" })
    userApprovedMdm?: boolean;
}

export class FindComputersByName200ApplicationJSONGeneralMdmCapableUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mdm_capable_user" })
    mdmCapableUser?: string;
}

export class FindComputersByName200ApplicationJSONGeneralRemoteManagement extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "managed" })
    managed?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "management_username" })
    managementUsername?: string;
}

export class FindComputersByName200ApplicationJSONGeneralSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class FindComputersByName200ApplicationJSONGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "alt_mac_address" })
    altMacAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "alt_network_adapter_type" })
    altNetworkAdapterType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "asset_tag" })
    assetTag?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "barcode_1" })
    barcode1?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "barcode_2" })
    barcode2?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "distribution_point" })
    distributionPoint?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_entry_date" })
    initialEntryDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_entry_date_epoch" })
    initialEntryDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_entry_date_utc" })
    initialEntryDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "ip_address" })
    ipAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "itunes_store_account_is_active" })
    itunesStoreAccountIsActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "jamf_version" })
    jamfVersion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_cloud_backup_date_epoch" })
    lastCloudBackupDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_cloud_backup_date_utc" })
    lastCloudBackupDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_contact_time" })
    lastContactTime?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_contact_time_epoch" })
    lastContactTimeEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_contact_time_utc" })
    lastContactTimeUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_enrolled_date_epoch" })
    lastEnrolledDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_enrolled_date_utc" })
    lastEnrolledDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_reported_ip" })
    lastReportedIp?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "mac_address" })
    macAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    @Type(() => FindComputersByName200ApplicationJSONGeneralManagementStatus)
    managementStatus?: FindComputersByName200ApplicationJSONGeneralManagementStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "mdm_capable" })
    mdmCapable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "mdm_capable_users" })
    @Type(() => FindComputersByName200ApplicationJSONGeneralMdmCapableUsers)
    mdmCapableUsers?: FindComputersByName200ApplicationJSONGeneralMdmCapableUsers;

    /**
     * Name of computer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "network_adapter_type" })
    networkAdapterType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "platform" })
    platform?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "remote_management" })
    @Type(() => FindComputersByName200ApplicationJSONGeneralRemoteManagement)
    remoteManagement?: FindComputersByName200ApplicationJSONGeneralRemoteManagement;

    @SpeakeasyMetadata()
    @Expose({ name: "report_date" })
    reportDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "report_date_epoch" })
    reportDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "report_date_utc" })
    reportDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => FindComputersByName200ApplicationJSONGeneralSite)
    site?: FindComputersByName200ApplicationJSONGeneralSite;

    @SpeakeasyMetadata()
    @Expose({ name: "sus" })
    sus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class FindComputersByName200ApplicationJSONGroupsAccountsComputerGroupMemberships extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "group" })
    group?: string;
}

export class FindComputersByName200ApplicationJSONGroupsAccountsLocalAccountsUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "administrator" })
    administrator?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault_enabled" })
    filevaultEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "home" })
    home?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "home_size" })
    homeSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "home_size_mb" })
    homeSizeMb?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "realname" })
    realname?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uid" })
    uid?: string;
}

export class FindComputersByName200ApplicationJSONGroupsAccountsLocalAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindComputersByName200ApplicationJSONGroupsAccountsLocalAccountsUser)
    user?: FindComputersByName200ApplicationJSONGroupsAccountsLocalAccountsUser;
}

export class FindComputersByName200ApplicationJSONGroupsAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationJSONGroupsAccountsComputerGroupMemberships,
    })
    @Expose({ name: "computer_group_memberships" })
    @Type(() => FindComputersByName200ApplicationJSONGroupsAccountsComputerGroupMemberships)
    computerGroupMemberships?: FindComputersByName200ApplicationJSONGroupsAccountsComputerGroupMemberships[];

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationJSONGroupsAccountsLocalAccounts,
    })
    @Expose({ name: "local_accounts" })
    @Type(() => FindComputersByName200ApplicationJSONGroupsAccountsLocalAccounts)
    localAccounts?: FindComputersByName200ApplicationJSONGroupsAccountsLocalAccounts[];
}

export class FindComputersByName200ApplicationJSONHardwareFilevault2Users extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    user?: string;
}

export class FindComputersByName200ApplicationJSONHardwareMappedPrintersPrinter extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "location" })
    location?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindComputersByName200ApplicationJSONHardwareMappedPrinters extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "printer" })
    @Type(() => FindComputersByName200ApplicationJSONHardwareMappedPrintersPrinter)
    printer?: FindComputersByName200ApplicationJSONHardwareMappedPrintersPrinter;
}

export enum FindComputersByName200ApplicationJSONHardwareSipStatus {
    Enabled = "Enabled",
    Disabled = "Disabled",
}

export class FindComputersByName200ApplicationJSONHardwareStorageDevicePartition extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "boot_drive_available_mb" })
    bootDriveAvailableMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault2_percent" })
    filevault2Percent?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault2_status" })
    filevault2Status?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault_percent" })
    filevaultPercent?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault_status" })
    filevaultStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lvUUID" })
    lvUUID?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lvgUUID" })
    lvgUUID?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "partition_capacity_mb" })
    partitionCapacityMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "percentage_full" })
    percentageFull?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "pvUUID" })
    pvUUID?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}

export class FindComputersByName200ApplicationJSONHardwareStorageDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "connection_type" })
    connectionType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "disk" })
    disk?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "drive_capacity_mb" })
    driveCapacityMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationJSONHardwareStorageDevicePartition,
    })
    @Expose({ name: "partition" })
    @Type(() => FindComputersByName200ApplicationJSONHardwareStorageDevicePartition)
    partition?: FindComputersByName200ApplicationJSONHardwareStorageDevicePartition[];

    @SpeakeasyMetadata()
    @Expose({ name: "revision" })
    revision?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "smart_status" })
    smartStatus?: string;
}

export class FindComputersByName200ApplicationJSONHardwareStorage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "device" })
    @Type(() => FindComputersByName200ApplicationJSONHardwareStorageDevice)
    device?: FindComputersByName200ApplicationJSONHardwareStorageDevice;
}

export class FindComputersByName200ApplicationJSONHardware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "active_directory_status" })
    activeDirectoryStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "available_ram_slots" })
    availableRamSlots?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "battery_capacity" })
    batteryCapacity?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "ble_capable" })
    bleCapable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "boot_rom" })
    bootRom?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bus_speed" })
    busSpeed?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "bus_speed_mhz" })
    busSpeedMhz?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "cache_size" })
    cacheSize?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "cache_size_kb" })
    cacheSizeKb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "disk_encryption_configuration" })
    diskEncryptionConfiguration?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONHardwareFilevault2Users })
    @Expose({ name: "filevault_2_users" })
    @Type(() => FindComputersByName200ApplicationJSONHardwareFilevault2Users)
    filevault2Users?: FindComputersByName200ApplicationJSONHardwareFilevault2Users[];

    @SpeakeasyMetadata()
    @Expose({ name: "gatekeeper_status" })
    gatekeeperStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "institutional_recovery_key" })
    institutionalRecoveryKey?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "make" })
    make?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONHardwareMappedPrinters })
    @Expose({ name: "mapped_printers" })
    @Type(() => FindComputersByName200ApplicationJSONHardwareMappedPrinters)
    mappedPrinters?: FindComputersByName200ApplicationJSONHardwareMappedPrinters[];

    @SpeakeasyMetadata()
    @Expose({ name: "master_password_set" })
    masterPasswordSet?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_identifier" })
    modelIdentifier?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "nic_speed" })
    nicSpeed?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "number_cores" })
    numberCores?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "number_processors" })
    numberProcessors?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "optical_drive" })
    opticalDrive?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "os_build" })
    osBuild?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "os_name" })
    osName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "os_version" })
    osVersion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_architechture" })
    processorArchitechture?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_speed" })
    processorSpeed?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_speed_mhz" })
    processorSpeedMhz?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_type" })
    processorType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "service_pack" })
    servicePack?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sip_status" })
    sipStatus?: FindComputersByName200ApplicationJSONHardwareSipStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "smc_version" })
    smcVersion?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONHardwareStorage })
    @Expose({ name: "storage" })
    @Type(() => FindComputersByName200ApplicationJSONHardwareStorage)
    storage?: FindComputersByName200ApplicationJSONHardwareStorage[];

    @SpeakeasyMetadata()
    @Expose({ name: "total_ram" })
    totalRam?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "total_ram_mb" })
    totalRamMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "xprotect_version" })
    xprotectVersion?: string;
}

export class FindComputersByName200ApplicationJSONLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    building?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    department?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_number" })
    phoneNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "position" })
    position?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "real_name" })
    realName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "realname" })
    realname?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "room" })
    room?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "filename" })
    filename?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "attachment" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment)
    attachment?: FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheralFields extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "field" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField)
    field?: FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bar_code_1" })
    barCode1?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bar_code_2" })
    barCode2?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "fields" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheralFields)
    fields?: FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheralFields;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the peripheral type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripheralsPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "applecare_id" })
    applecareId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_leased" })
    isLeased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_purchased" })
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires" })
    leaseExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_epoch" })
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_utc" })
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "life_expectancy" })
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date" })
    poDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_epoch" })
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_utc" })
    poDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_number" })
    poNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchase_price" })
    purchasePrice?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_account" })
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_contact" })
    purchasingContact?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vendor" })
    vendor?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires" })
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_epoch" })
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_utc" })
    warrantyExpiresUtc?: string;
}

export class FindComputersByName200ApplicationJSONPeripheralsPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachments,
    })
    @Expose({ name: "attachments" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachments)
    attachments?: FindComputersByName200ApplicationJSONPeripheralsPeripheralsAttachments[];

    @SpeakeasyMetadata()
    @Expose({ name: "peripheral" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheral)
    peripheral?: FindComputersByName200ApplicationJSONPeripheralsPeripheralsPeripheral;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripheralsPurchasing)
    purchasing?: FindComputersByName200ApplicationJSONPeripheralsPeripheralsPurchasing;
}

export class FindComputersByName200ApplicationJSONPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONPeripheralsPeripherals })
    @Expose({ name: "peripherals" })
    @Type(() => FindComputersByName200ApplicationJSONPeripheralsPeripherals)
    peripherals?: FindComputersByName200ApplicationJSONPeripheralsPeripherals[];

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByName200ApplicationJSONPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "applecare_id" })
    applecareId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_leased" })
    isLeased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_purchased" })
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires" })
    leaseExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_epoch" })
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_utc" })
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "life_expectancy" })
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date" })
    poDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_epoch" })
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_utc" })
    poDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_number" })
    poNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchase_price" })
    purchasePrice?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_account" })
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_contact" })
    purchasingContact?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vendor" })
    vendor?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires" })
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_epoch" })
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_utc" })
    warrantyExpiresUtc?: string;
}

export class FindComputersByName200ApplicationJSONSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "activation_lock" })
    activationLock?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "external_boot_level" })
    externalBootLevel?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "firewall_enabled" })
    firewallEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "recovery_lock_enabled" })
    recoveryLockEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "secure_boot_level" })
    secureBootLevel?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareApplicationsApplication extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareApplications extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "application" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareApplicationsApplication)
    application?: FindComputersByName200ApplicationJSONSoftwareApplicationsApplication;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByName200ApplicationJSONSoftwareAvailableSoftwareUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareAvailableUpdatesUpdate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "package_name" })
    packageName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareAvailableUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "update" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareAvailableUpdatesUpdate)
    update?: FindComputersByName200ApplicationJSONSoftwareAvailableUpdatesUpdate;
}

export class FindComputersByName200ApplicationJSONSoftwareCachedByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareFontsFont extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareFonts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "font" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareFontsFont)
    font?: FindComputersByName200ApplicationJSONSoftwareFontsFont;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByName200ApplicationJSONSoftwareInstalledByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareInstalledByInstallerSwu extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package?: string;
}

export class FindComputersByName200ApplicationJSONSoftwareLicensedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByName200ApplicationJSONSoftwarePluginsPlugin extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByName200ApplicationJSONSoftwarePlugins extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "plugin" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwarePluginsPlugin)
    plugin?: FindComputersByName200ApplicationJSONSoftwarePluginsPlugin;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByName200ApplicationJSONSoftwareRunningServices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByName200ApplicationJSONSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareApplications })
    @Expose({ name: "applications" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareApplications)
    applications?: FindComputersByName200ApplicationJSONSoftwareApplications[];

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationJSONSoftwareAvailableSoftwareUpdates,
    })
    @Expose({ name: "available_software_updates" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareAvailableSoftwareUpdates)
    availableSoftwareUpdates?: FindComputersByName200ApplicationJSONSoftwareAvailableSoftwareUpdates[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareAvailableUpdates })
    @Expose({ name: "available_updates" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareAvailableUpdates)
    availableUpdates?: FindComputersByName200ApplicationJSONSoftwareAvailableUpdates[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareCachedByCasper })
    @Expose({ name: "cached_by_casper" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareCachedByCasper)
    cachedByCasper?: FindComputersByName200ApplicationJSONSoftwareCachedByCasper[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareFonts })
    @Expose({ name: "fonts" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareFonts)
    fonts?: FindComputersByName200ApplicationJSONSoftwareFonts[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareInstalledByCasper })
    @Expose({ name: "installed_by_casper" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareInstalledByCasper)
    installedByCasper?: FindComputersByName200ApplicationJSONSoftwareInstalledByCasper[];

    @SpeakeasyMetadata({
        elemType: FindComputersByName200ApplicationJSONSoftwareInstalledByInstallerSwu,
    })
    @Expose({ name: "installed_by_installer_swu" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareInstalledByInstallerSwu)
    installedByInstallerSwu?: FindComputersByName200ApplicationJSONSoftwareInstalledByInstallerSwu[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareLicensedSoftware })
    @Expose({ name: "licensed_software" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareLicensedSoftware)
    licensedSoftware?: FindComputersByName200ApplicationJSONSoftwareLicensedSoftware[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwarePlugins })
    @Expose({ name: "plugins" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwarePlugins)
    plugins?: FindComputersByName200ApplicationJSONSoftwarePlugins[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONSoftwareRunningServices })
    @Expose({ name: "running_services" })
    @Type(() => FindComputersByName200ApplicationJSONSoftwareRunningServices)
    runningServices?: FindComputersByName200ApplicationJSONSoftwareRunningServices[];

    @SpeakeasyMetadata()
    @Expose({ name: "unix_executables" })
    unixExecutables?: string;
}

/**
 * OK
 */
export class FindComputersByName200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONCertificates })
    @Expose({ name: "certificates" })
    @Type(() => FindComputersByName200ApplicationJSONCertificates)
    certificates?: FindComputersByName200ApplicationJSONCertificates[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONConfigurationProfiles })
    @Expose({ name: "configuration_profiles" })
    @Type(() => FindComputersByName200ApplicationJSONConfigurationProfiles)
    configurationProfiles?: FindComputersByName200ApplicationJSONConfigurationProfiles[];

    @SpeakeasyMetadata({ elemType: FindComputersByName200ApplicationJSONExtensionAttributes })
    @Expose({ name: "extension_attributes" })
    @Type(() => FindComputersByName200ApplicationJSONExtensionAttributes)
    extensionAttributes?: FindComputersByName200ApplicationJSONExtensionAttributes[];

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => FindComputersByName200ApplicationJSONGeneral)
    general?: FindComputersByName200ApplicationJSONGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "groups_accounts" })
    @Type(() => FindComputersByName200ApplicationJSONGroupsAccounts)
    groupsAccounts?: FindComputersByName200ApplicationJSONGroupsAccounts;

    @SpeakeasyMetadata()
    @Expose({ name: "hardware" })
    @Type(() => FindComputersByName200ApplicationJSONHardware)
    hardware?: FindComputersByName200ApplicationJSONHardware;

    @SpeakeasyMetadata()
    @Expose({ name: "location" })
    @Type(() => FindComputersByName200ApplicationJSONLocation)
    location?: FindComputersByName200ApplicationJSONLocation;

    @SpeakeasyMetadata()
    @Expose({ name: "peripherals" })
    @Type(() => FindComputersByName200ApplicationJSONPeripherals)
    peripherals?: FindComputersByName200ApplicationJSONPeripherals;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing" })
    @Type(() => FindComputersByName200ApplicationJSONPurchasing)
    purchasing?: FindComputersByName200ApplicationJSONPurchasing;

    @SpeakeasyMetadata()
    @Expose({ name: "security" })
    @Type(() => FindComputersByName200ApplicationJSONSecurity)
    security?: FindComputersByName200ApplicationJSONSecurity;

    @SpeakeasyMetadata()
    @Expose({ name: "software" })
    @Type(() => FindComputersByName200ApplicationJSONSoftware)
    software?: FindComputersByName200ApplicationJSONSoftware;
}

export class FindComputersByNameResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findComputersByName200ApplicationJSONObject?: FindComputersByName200ApplicationJSON;
}
