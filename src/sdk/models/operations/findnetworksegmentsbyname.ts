/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class FindNetworkSegmentsByNameRequest extends SpeakeasyBase {
    /**
     * Name to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=name" })
    name: string;
}

/**
 * OK
 */
export class FindNetworkSegmentsByName200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata()
    building?: string;

    @SpeakeasyMetadata()
    department?: string;

    @SpeakeasyMetadata()
    distributionPoint?: string;

    @SpeakeasyMetadata()
    distributionServer?: string;

    @SpeakeasyMetadata()
    endingAddress: string;

    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the network segment
     */
    @SpeakeasyMetadata()
    name: string;

    @SpeakeasyMetadata()
    overrideBuildings?: boolean;

    @SpeakeasyMetadata()
    overrideDepartments?: boolean;

    @SpeakeasyMetadata()
    startingAddress: string;

    @SpeakeasyMetadata()
    swuServer?: string;

    @SpeakeasyMetadata()
    url?: string;
}

/**
 * OK
 */
export class FindNetworkSegmentsByName200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    building?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    department?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "distribution_point" })
    distributionPoint?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "distribution_server" })
    distributionServer?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "ending_address" })
    endingAddress: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the network segment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "override_buildings" })
    overrideBuildings?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "override_departments" })
    overrideDepartments?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "starting_address" })
    startingAddress: string;

    @SpeakeasyMetadata()
    @Expose({ name: "swu_server" })
    swuServer?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}

export class FindNetworkSegmentsByNameResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findNetworkSegmentsByName200ApplicationJSONObject?: FindNetworkSegmentsByName200ApplicationJSON;
}
