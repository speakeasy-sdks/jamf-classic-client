/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * A value of "install" is similar to clicking the "Download and Install Updates" button on the UI. Any other value mimics the behavior of "Download Updates" from the UI.
 */
export enum CreateComputerCommandByCommandAndActionAction {
    Install = "install",
}

/**
 * Command to send to device.
 */
export enum CreateComputerCommandByCommandAndActionCommand {
    ScheduleOSUpdate = "ScheduleOSUpdate",
}

export class CreateComputerCommandByCommandAndActionRequest extends SpeakeasyBase {
    /**
     * A value of "install" is similar to clicking the "Download and Install Updates" button on the UI. Any other value mimics the behavior of "Download Updates" from the UI.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=action" })
    action: CreateComputerCommandByCommandAndActionAction;

    /**
     * Command to send to device.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=command" })
    command: CreateComputerCommandByCommandAndActionCommand;

    /**
     * Id of computer or computers (supports comma separated values e.g. /id/8,10,55) to send the command
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

export class CreateComputerCommandByCommandAndActionResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
