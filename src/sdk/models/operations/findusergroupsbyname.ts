/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindUserGroupsByNameRequest extends SpeakeasyBase {
    /**
     * Name to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=name" })
    name: string;
}

export enum FindUserGroupsByName200ApplicationXMLCriteriaCriterionAndOr {
    And = "and",
    Or = "or",
}

export class FindUserGroupsByName200ApplicationXMLCriteriaCriterion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    andOr?: FindUserGroupsByName200ApplicationXMLCriteriaCriterionAndOr;

    @SpeakeasyMetadata()
    closingParen?: boolean;

    /**
     * Name of the criteria
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    openingParen?: boolean;

    @SpeakeasyMetadata()
    priority?: number;

    /**
     * Operator
     */
    @SpeakeasyMetadata()
    searchType?: string;

    @SpeakeasyMetadata()
    value?: string;
}

export class FindUserGroupsByName200ApplicationXMLCriteria extends SpeakeasyBase {
    @SpeakeasyMetadata()
    criterion?: FindUserGroupsByName200ApplicationXMLCriteriaCriterion;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindUserGroupsByName200ApplicationXMLSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

export class FindUserGroupsByName200ApplicationXMLUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    emailAddress?: string;

    @SpeakeasyMetadata()
    fullName?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    phoneNumber?: string;

    @SpeakeasyMetadata()
    username?: string;
}

export class FindUserGroupsByName200ApplicationXMLUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    size?: number;

    @SpeakeasyMetadata()
    user?: FindUserGroupsByName200ApplicationXMLUsersUser;
}

/**
 * OK
 */
export class FindUserGroupsByName200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindUserGroupsByName200ApplicationXMLCriteria })
    criteria?: FindUserGroupsByName200ApplicationXMLCriteria[];

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    isNotifyOnChange?: boolean;

    @SpeakeasyMetadata()
    isSmart: boolean;

    /**
     * Name of the user group
     */
    @SpeakeasyMetadata()
    name: string;

    @SpeakeasyMetadata()
    site?: FindUserGroupsByName200ApplicationXMLSite;

    @SpeakeasyMetadata({ elemType: FindUserGroupsByName200ApplicationXMLUsers })
    users?: FindUserGroupsByName200ApplicationXMLUsers[];
}

export enum FindUserGroupsByName200ApplicationJSONCriteriaCriterionAndOr {
    And = "and",
    Or = "or",
}

export class FindUserGroupsByName200ApplicationJSONCriteriaCriterion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "and_or" })
    andOr?: FindUserGroupsByName200ApplicationJSONCriteriaCriterionAndOr;

    @SpeakeasyMetadata()
    @Expose({ name: "closing_paren" })
    closingParen?: boolean;

    /**
     * Name of the criteria
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "opening_paren" })
    openingParen?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "priority" })
    priority?: number;

    /**
     * Operator
     */
    @SpeakeasyMetadata()
    @Expose({ name: "search_type" })
    searchType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class FindUserGroupsByName200ApplicationJSONCriteria extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "criterion" })
    @Type(() => FindUserGroupsByName200ApplicationJSONCriteriaCriterion)
    criterion?: FindUserGroupsByName200ApplicationJSONCriteriaCriterion;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindUserGroupsByName200ApplicationJSONSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class FindUserGroupsByName200ApplicationJSONUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "full_name" })
    fullName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_number" })
    phoneNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}

export class FindUserGroupsByName200ApplicationJSONUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindUserGroupsByName200ApplicationJSONUsersUser)
    user?: FindUserGroupsByName200ApplicationJSONUsersUser;
}

/**
 * OK
 */
export class FindUserGroupsByName200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindUserGroupsByName200ApplicationJSONCriteria })
    @Expose({ name: "criteria" })
    @Type(() => FindUserGroupsByName200ApplicationJSONCriteria)
    criteria?: FindUserGroupsByName200ApplicationJSONCriteria[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_notify_on_change" })
    isNotifyOnChange?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_smart" })
    isSmart: boolean;

    /**
     * Name of the user group
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => FindUserGroupsByName200ApplicationJSONSite)
    site?: FindUserGroupsByName200ApplicationJSONSite;

    @SpeakeasyMetadata({ elemType: FindUserGroupsByName200ApplicationJSONUsers })
    @Expose({ name: "users" })
    @Type(() => FindUserGroupsByName200ApplicationJSONUsers)
    users?: FindUserGroupsByName200ApplicationJSONUsers[];
}

export class FindUserGroupsByNameResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findUserGroupsByName200ApplicationJSONObject?: FindUserGroupsByName200ApplicationJSON;
}
