/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Name is supported for all but the peripherals resource
 */
export enum UploadFilesIDType {
    Id = "id",
    Name = "name",
}

/**
 * Resource to attach the file to
 */
export enum UploadFilesResource {
    Computers = "computers",
    Mobiledevices = "mobiledevices",
    Enrollmentprofiles = "enrollmentprofiles",
    Printers = "printers",
    Peripherals = "peripherals",
    Policies = "policies",
    Ebooks = "ebooks",
    Mobiledeviceapplicationsicon = "mobiledeviceapplicationsicon",
    Mobiledeviceapplicationsipa = "mobiledeviceapplicationsipa",
    Diskencryptionconfigurations = "diskencryptionconfigurations",
}

export class UploadFilesRequest extends SpeakeasyBase {
    /**
     * Uploads the .ipa to Jamf Cloud Distribution Service instead of the Jamf Pro database. Only supported for Jamf Cloud customers and the `mobiledeviceapplicationsipa` resource.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=FORCE_IPA_UPLOAD" })
    forceIpaUpload?: boolean;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;

    /**
     * Name is supported for all but the peripherals resource
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=idType" })
    idType: UploadFilesIDType;

    /**
     * Resource to attach the file to
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=resource" })
    resource: UploadFilesResource;
}

export class UploadFilesResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
