/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Type of device to be flushed
 */
export enum CreateCommandFlushWithIdAndStatusIdtype {
    Computers = "computers",
    Computergroups = "computergroups",
    Mobiledevices = "mobiledevices",
    Mobiledevicegroups = "mobiledevicegroups",
}

/**
 * Command status to be flushed
 */
export enum CreateCommandFlushWithIdAndStatusStatus {
    Pending = "Pending",
    Failed = "Failed",
    PendingPlusFailed = "Pending+Failed",
}

export class CreateCommandFlushWithIdAndStatusRequest extends SpeakeasyBase {
    /**
     * ID of device to be flushed
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;

    /**
     * Type of device to be flushed
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=idtype" })
    idtype: CreateCommandFlushWithIdAndStatusIdtype;

    /**
     * Command status to be flushed
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=status" })
    status: CreateCommandFlushWithIdAndStatusStatus;
}

export class CreateCommandFlushWithIdAndStatusResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
