/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class CreateComputerInvitationsByIdRequest extends SpeakeasyBase {
    /**
     * ID value to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;
}

export class CreateComputerInvitationsById201ApplicationXMLEnrollIntoSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class CreateComputerInvitationsById201ApplicationXMLSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

/**
 * Created
 */
export class CreateComputerInvitationsById201ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata()
    createAccountIfDoesNotExist?: boolean;

    @SpeakeasyMetadata()
    enrollIntoSite?: CreateComputerInvitationsById201ApplicationXMLEnrollIntoSite;

    /**
     * Use 'Unlimited' to specify no expiration date
     */
    @SpeakeasyMetadata()
    expirationDate?: string;

    @SpeakeasyMetadata()
    expirationDateEpoch?: number;

    @SpeakeasyMetadata()
    expirationDateUtc?: string;

    @SpeakeasyMetadata()
    hideAccount?: boolean;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    invitation?: number;

    @SpeakeasyMetadata()
    invitationStatus?: string;

    @SpeakeasyMetadata()
    invitationType?: string;

    @SpeakeasyMetadata()
    invitedUserUuid?: string;

    @SpeakeasyMetadata()
    keepExistingSiteMembership?: boolean;

    @SpeakeasyMetadata()
    lockDownSsh?: boolean;

    @SpeakeasyMetadata()
    multipleUsersAllowed?: boolean;

    @SpeakeasyMetadata()
    site?: CreateComputerInvitationsById201ApplicationXMLSite;

    @SpeakeasyMetadata()
    sshPassword?: string;

    @SpeakeasyMetadata()
    sshUsername?: string;

    @SpeakeasyMetadata()
    timesUsed?: number;
}

export class CreateComputerInvitationsByIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
