/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindMobileDeviceGroupsByIdRequest extends SpeakeasyBase {
    /**
     * ID value to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;
}

export enum FindMobileDeviceGroupsById200ApplicationXMLCriteriaCriterionAndOr {
    And = "and",
    Or = "or",
}

export class FindMobileDeviceGroupsById200ApplicationXMLCriteriaCriterion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    andOr?: FindMobileDeviceGroupsById200ApplicationXMLCriteriaCriterionAndOr;

    @SpeakeasyMetadata()
    closingParen?: boolean;

    /**
     * Name of the criteria
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    openingParen?: boolean;

    @SpeakeasyMetadata()
    priority?: number;

    /**
     * Operator
     */
    @SpeakeasyMetadata()
    searchType?: string;

    @SpeakeasyMetadata()
    value?: string;
}

export class FindMobileDeviceGroupsById200ApplicationXMLCriteria extends SpeakeasyBase {
    @SpeakeasyMetadata()
    criterion?: FindMobileDeviceGroupsById200ApplicationXMLCriteriaCriterion;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindMobileDeviceGroupsById200ApplicationXMLMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    macAddress?: string;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    udid?: string;

    @SpeakeasyMetadata()
    wifiMacAddress?: string;
}

export class FindMobileDeviceGroupsById200ApplicationXMLMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mobileDevice?: FindMobileDeviceGroupsById200ApplicationXMLMobileDevicesMobileDevice;
}

export class FindMobileDeviceGroupsById200ApplicationXMLSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

/**
 * OK
 */
export class FindMobileDeviceGroupsById200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindMobileDeviceGroupsById200ApplicationXMLCriteria })
    criteria?: FindMobileDeviceGroupsById200ApplicationXMLCriteria[];

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    isSmart: boolean;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceGroupsById200ApplicationXMLMobileDevices })
    mobileDevices?: FindMobileDeviceGroupsById200ApplicationXMLMobileDevices[];

    @SpeakeasyMetadata()
    name: string;

    @SpeakeasyMetadata()
    site?: FindMobileDeviceGroupsById200ApplicationXMLSite;
}

export enum FindMobileDeviceGroupsById200ApplicationJSONCriteriaCriterionAndOr {
    And = "and",
    Or = "or",
}

export class FindMobileDeviceGroupsById200ApplicationJSONCriteriaCriterion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "and_or" })
    andOr?: FindMobileDeviceGroupsById200ApplicationJSONCriteriaCriterionAndOr;

    @SpeakeasyMetadata()
    @Expose({ name: "closing_paren" })
    closingParen?: boolean;

    /**
     * Name of the criteria
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "opening_paren" })
    openingParen?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "priority" })
    priority?: number;

    /**
     * Operator
     */
    @SpeakeasyMetadata()
    @Expose({ name: "search_type" })
    searchType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class FindMobileDeviceGroupsById200ApplicationJSONCriteria extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "criterion" })
    @Type(() => FindMobileDeviceGroupsById200ApplicationJSONCriteriaCriterion)
    criterion?: FindMobileDeviceGroupsById200ApplicationJSONCriteriaCriterion;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindMobileDeviceGroupsById200ApplicationJSONMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "mac_address" })
    macAddress?: string;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "wifi_mac_address" })
    wifiMacAddress?: string;
}

export class FindMobileDeviceGroupsById200ApplicationJSONMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device" })
    @Type(() => FindMobileDeviceGroupsById200ApplicationJSONMobileDevicesMobileDevice)
    mobileDevice?: FindMobileDeviceGroupsById200ApplicationJSONMobileDevicesMobileDevice;
}

export class FindMobileDeviceGroupsById200ApplicationJSONSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

/**
 * OK
 */
export class FindMobileDeviceGroupsById200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindMobileDeviceGroupsById200ApplicationJSONCriteria })
    @Expose({ name: "criteria" })
    @Type(() => FindMobileDeviceGroupsById200ApplicationJSONCriteria)
    criteria?: FindMobileDeviceGroupsById200ApplicationJSONCriteria[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_smart" })
    isSmart: boolean;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceGroupsById200ApplicationJSONMobileDevices })
    @Expose({ name: "mobile_devices" })
    @Type(() => FindMobileDeviceGroupsById200ApplicationJSONMobileDevices)
    mobileDevices?: FindMobileDeviceGroupsById200ApplicationJSONMobileDevices[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => FindMobileDeviceGroupsById200ApplicationJSONSite)
    site?: FindMobileDeviceGroupsById200ApplicationJSONSite;
}

export class FindMobileDeviceGroupsByIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findMobileDeviceGroupsById200ApplicationJSONObject?: FindMobileDeviceGroupsById200ApplicationJSON;
}
