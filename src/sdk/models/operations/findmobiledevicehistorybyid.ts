/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindMobileDeviceHistoryByIdRequest extends SpeakeasyBase {
    /**
     * ID value to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsFailedApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    managementStatus?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsFailed extends SpeakeasyBase {
    @SpeakeasyMetadata()
    app?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsFailedApp;
}

export enum FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledAppStoreFromMobileDeviceAppCatalogManagementStatus {
    Unmanaged = "Unmanaged",
    Managed = "Managed",
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledAppStoreFromMobileDeviceAppCatalog extends SpeakeasyBase {
    @SpeakeasyMetadata()
    bundleSize?: string;

    @SpeakeasyMetadata()
    dynamicSize?: string;

    @SpeakeasyMetadata()
    managementStatus?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledAppStoreFromMobileDeviceAppCatalogManagementStatus;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export enum FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledInHouseFromMobileDeviceAppCatalogManagementStatus {
    Unmanaged = "Unmanaged",
    Managed = "Managed",
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledInHouseFromMobileDeviceAppCatalog extends SpeakeasyBase {
    @SpeakeasyMetadata()
    bundleSize?: string;

    @SpeakeasyMetadata()
    dynamicSize?: string;

    @SpeakeasyMetadata()
    managementStatus?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledInHouseFromMobileDeviceAppCatalogManagementStatus;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export enum FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledOtherManagementStatus {
    Unmanaged = "Unmanaged",
    Managed = "Managed",
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledOther extends SpeakeasyBase {
    @SpeakeasyMetadata()
    bundleSize?: string;

    @SpeakeasyMetadata()
    dynamicSize?: string;

    @SpeakeasyMetadata()
    managementStatus?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledOtherManagementStatus;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalled extends SpeakeasyBase {
    @SpeakeasyMetadata()
    appStoreFromMobileDeviceAppCatalog?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledAppStoreFromMobileDeviceAppCatalog;

    @SpeakeasyMetadata()
    inHouseFromMobileDeviceAppCatalog?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledInHouseFromMobileDeviceAppCatalog;

    @SpeakeasyMetadata()
    other?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalledOther;
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsPendingApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    managementStatus?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplicationsPending extends SpeakeasyBase {
    @SpeakeasyMetadata()
    app?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsPendingApp;
}

export class FindMobileDeviceHistoryById200ApplicationXMLApplications extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationXMLApplicationsFailed })
    failed?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsFailed[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalled,
    })
    installed?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsInstalled[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLApplicationsPending,
    })
    pending?: FindMobileDeviceHistoryById200ApplicationXMLApplicationsPending[];
}

export class FindMobileDeviceHistoryById200ApplicationXMLAuditsAudit extends SpeakeasyBase {
    @SpeakeasyMetadata()
    dateTime?: string;

    @SpeakeasyMetadata()
    dateTimeEpoch?: number;

    @SpeakeasyMetadata()
    event?: string;

    @SpeakeasyMetadata()
    username?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLAudits extends SpeakeasyBase {
    @SpeakeasyMetadata()
    audit?: FindMobileDeviceHistoryById200ApplicationXMLAuditsAudit;
}

export class FindMobileDeviceHistoryById200ApplicationXMLEbooksFailed extends SpeakeasyBase {
    @SpeakeasyMetadata()
    author?: string;

    @SpeakeasyMetadata()
    kind?: string;

    @SpeakeasyMetadata()
    managementStatus?: string;

    @SpeakeasyMetadata()
    title?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalledIbookstore extends SpeakeasyBase {
    @SpeakeasyMetadata()
    author?: string;

    @SpeakeasyMetadata()
    kind?: string;

    @SpeakeasyMetadata()
    managementStatus?: string;

    @SpeakeasyMetadata()
    title?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalledInhouse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    author?: string;

    @SpeakeasyMetadata()
    kind?: string;

    @SpeakeasyMetadata()
    managementStatus?: string;

    @SpeakeasyMetadata()
    title?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalled extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalledIbookstore,
    })
    ibookstore?: FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalledIbookstore[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalledInhouse,
    })
    inhouse?: FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalledInhouse[];
}

export class FindMobileDeviceHistoryById200ApplicationXMLEbooksPending extends SpeakeasyBase {
    @SpeakeasyMetadata()
    author?: string;

    @SpeakeasyMetadata()
    kind?: string;

    @SpeakeasyMetadata()
    managementStatus?: string;

    @SpeakeasyMetadata()
    title?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLEbooks extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationXMLEbooksFailed })
    failed?: FindMobileDeviceHistoryById200ApplicationXMLEbooksFailed[];

    @SpeakeasyMetadata()
    installed?: FindMobileDeviceHistoryById200ApplicationXMLEbooksInstalled;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationXMLEbooksPending })
    pending?: FindMobileDeviceHistoryById200ApplicationXMLEbooksPending[];
}

export class FindMobileDeviceHistoryById200ApplicationXMLGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    macAddress?: string;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    udid?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsCompletedCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    dateTimeCompleted?: string;

    @SpeakeasyMetadata()
    dateTimeCompletedEpoch?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsCompleted extends SpeakeasyBase {
    @SpeakeasyMetadata()
    command?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsCompletedCommand;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsFailedCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    dateTimeFailed?: string;

    @SpeakeasyMetadata()
    dateTimeFailedEpoch?: number;

    @SpeakeasyMetadata()
    dateTimeIssued?: string;

    @SpeakeasyMetadata()
    dateTimeIssuedEpoch?: string;

    @SpeakeasyMetadata()
    error?: string;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsFailed extends SpeakeasyBase {
    @SpeakeasyMetadata()
    command?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsFailedCommand;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsPendingCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    dateTimeFailed?: string;

    @SpeakeasyMetadata()
    dateTimeFailedEpoch?: number;

    @SpeakeasyMetadata()
    dateTimeIssued?: string;

    @SpeakeasyMetadata()
    dateTimeIssuedEpoch?: string;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsPending extends SpeakeasyBase {
    @SpeakeasyMetadata()
    command?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsPendingCommand;
}

export class FindMobileDeviceHistoryById200ApplicationXMLManagementCommands extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsCompleted,
    })
    completed?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsCompleted[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsFailed,
    })
    failed?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsFailed[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsPending,
    })
    pending?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommandsPending[];
}

export class FindMobileDeviceHistoryById200ApplicationXMLUserLocationLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    building?: string;

    @SpeakeasyMetadata()
    dateTime?: string;

    @SpeakeasyMetadata()
    dateTimeEpoch?: number;

    @SpeakeasyMetadata()
    department?: string;

    @SpeakeasyMetadata()
    emailAddress?: string;

    @SpeakeasyMetadata()
    fullName?: string;

    @SpeakeasyMetadata()
    phoneNumber?: string;

    @SpeakeasyMetadata()
    position?: string;

    @SpeakeasyMetadata()
    room?: string;

    @SpeakeasyMetadata()
    username?: string;
}

export class FindMobileDeviceHistoryById200ApplicationXMLUserLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    location?: FindMobileDeviceHistoryById200ApplicationXMLUserLocationLocation;
}

/**
 * OK
 */
export class FindMobileDeviceHistoryById200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata()
    applications?: FindMobileDeviceHistoryById200ApplicationXMLApplications;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationXMLAudits })
    audits?: FindMobileDeviceHistoryById200ApplicationXMLAudits[];

    @SpeakeasyMetadata()
    ebooks?: FindMobileDeviceHistoryById200ApplicationXMLEbooks;

    @SpeakeasyMetadata()
    general?: FindMobileDeviceHistoryById200ApplicationXMLGeneral;

    @SpeakeasyMetadata()
    managementCommands?: FindMobileDeviceHistoryById200ApplicationXMLManagementCommands;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationXMLUserLocation })
    userLocation?: FindMobileDeviceHistoryById200ApplicationXMLUserLocation[];
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailedApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailed extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "app" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailedApp)
    app?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailedApp;
}

export enum FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledAppStoreFromMobileDeviceAppCatalogManagementStatus {
    Unmanaged = "Unmanaged",
    Managed = "Managed",
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledAppStoreFromMobileDeviceAppCatalog extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bundle_size" })
    bundleSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dynamic_size" })
    dynamicSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledAppStoreFromMobileDeviceAppCatalogManagementStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export enum FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledInHouseFromMobileDeviceAppCatalogManagementStatus {
    Unmanaged = "Unmanaged",
    Managed = "Managed",
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledInHouseFromMobileDeviceAppCatalog extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bundle_size" })
    bundleSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dynamic_size" })
    dynamicSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledInHouseFromMobileDeviceAppCatalogManagementStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export enum FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledOtherManagementStatus {
    Unmanaged = "Unmanaged",
    Managed = "Managed",
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledOther extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bundle_size" })
    bundleSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dynamic_size" })
    dynamicSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledOtherManagementStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalled extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "app_store_from_mobile_device_app_catalog" })
    @Type(
        () =>
            FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledAppStoreFromMobileDeviceAppCatalog
    )
    appStoreFromMobileDeviceAppCatalog?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledAppStoreFromMobileDeviceAppCatalog;

    @SpeakeasyMetadata()
    @Expose({ name: "in_house_from_mobile_device_app_catalog" })
    @Type(
        () =>
            FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledInHouseFromMobileDeviceAppCatalog
    )
    inHouseFromMobileDeviceAppCatalog?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledInHouseFromMobileDeviceAppCatalog;

    @SpeakeasyMetadata()
    @Expose({ name: "other" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledOther)
    other?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalledOther;
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsPendingApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplicationsPending extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "app" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplicationsPendingApp)
    app?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsPendingApp;
}

export class FindMobileDeviceHistoryById200ApplicationJSONApplications extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailed,
    })
    @Expose({ name: "failed" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailed)
    failed?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsFailed[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalled,
    })
    @Expose({ name: "installed" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalled)
    installed?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsInstalled[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONApplicationsPending,
    })
    @Expose({ name: "pending" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplicationsPending)
    pending?: FindMobileDeviceHistoryById200ApplicationJSONApplicationsPending[];
}

export class FindMobileDeviceHistoryById200ApplicationJSONAuditsAudit extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "date_time" })
    dateTime?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_epoch" })
    dateTimeEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "event" })
    event?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONAudits extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "audit" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONAuditsAudit)
    audit?: FindMobileDeviceHistoryById200ApplicationJSONAuditsAudit;
}

export class FindMobileDeviceHistoryById200ApplicationJSONEbooksFailed extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "author" })
    author?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "kind" })
    kind?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledIbookstore extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "author" })
    author?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "kind" })
    kind?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledInhouse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "author" })
    author?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "kind" })
    kind?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalled extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledIbookstore,
    })
    @Expose({ name: "ibookstore" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledIbookstore)
    ibookstore?: FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledIbookstore[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledInhouse,
    })
    @Expose({ name: "inhouse" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledInhouse)
    inhouse?: FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalledInhouse[];
}

export class FindMobileDeviceHistoryById200ApplicationJSONEbooksPending extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "author" })
    author?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "kind" })
    kind?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    managementStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONEbooks extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationJSONEbooksFailed })
    @Expose({ name: "failed" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONEbooksFailed)
    failed?: FindMobileDeviceHistoryById200ApplicationJSONEbooksFailed[];

    @SpeakeasyMetadata()
    @Expose({ name: "installed" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalled)
    installed?: FindMobileDeviceHistoryById200ApplicationJSONEbooksInstalled;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationJSONEbooksPending })
    @Expose({ name: "pending" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONEbooksPending)
    pending?: FindMobileDeviceHistoryById200ApplicationJSONEbooksPending[];
}

export class FindMobileDeviceHistoryById200ApplicationJSONGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "mac_address" })
    macAddress?: string;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompletedCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "date_time_completed" })
    dateTimeCompleted?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_completed_epoch" })
    dateTimeCompletedEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompleted extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "command" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompletedCommand)
    command?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompletedCommand;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailedCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "date_time_failed" })
    dateTimeFailed?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_failed_epoch" })
    dateTimeFailedEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_issued" })
    dateTimeIssued?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_issued_epoch" })
    dateTimeIssuedEpoch?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailed extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "command" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailedCommand)
    command?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailedCommand;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPendingCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "date_time_failed" })
    dateTimeFailed?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_failed_epoch" })
    dateTimeFailedEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_issued" })
    dateTimeIssued?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_issued_epoch" })
    dateTimeIssuedEpoch?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPending extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "command" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPendingCommand)
    command?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPendingCommand;
}

export class FindMobileDeviceHistoryById200ApplicationJSONManagementCommands extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompleted,
    })
    @Expose({ name: "completed" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompleted)
    completed?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsCompleted[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailed,
    })
    @Expose({ name: "failed" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailed)
    failed?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsFailed[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPending,
    })
    @Expose({ name: "pending" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPending)
    pending?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommandsPending[];
}

export class FindMobileDeviceHistoryById200ApplicationJSONUserLocationLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    building?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time" })
    dateTime?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_time_epoch" })
    dateTimeEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    department?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "full_name" })
    fullName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_number" })
    phoneNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "position" })
    position?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "room" })
    room?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}

export class FindMobileDeviceHistoryById200ApplicationJSONUserLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "location" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONUserLocationLocation)
    location?: FindMobileDeviceHistoryById200ApplicationJSONUserLocationLocation;
}

/**
 * OK
 */
export class FindMobileDeviceHistoryById200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "applications" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONApplications)
    applications?: FindMobileDeviceHistoryById200ApplicationJSONApplications;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationJSONAudits })
    @Expose({ name: "audits" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONAudits)
    audits?: FindMobileDeviceHistoryById200ApplicationJSONAudits[];

    @SpeakeasyMetadata()
    @Expose({ name: "ebooks" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONEbooks)
    ebooks?: FindMobileDeviceHistoryById200ApplicationJSONEbooks;

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONGeneral)
    general?: FindMobileDeviceHistoryById200ApplicationJSONGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "management_commands" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONManagementCommands)
    managementCommands?: FindMobileDeviceHistoryById200ApplicationJSONManagementCommands;

    @SpeakeasyMetadata({ elemType: FindMobileDeviceHistoryById200ApplicationJSONUserLocation })
    @Expose({ name: "user_location" })
    @Type(() => FindMobileDeviceHistoryById200ApplicationJSONUserLocation)
    userLocation?: FindMobileDeviceHistoryById200ApplicationJSONUserLocation[];
}

export class FindMobileDeviceHistoryByIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findMobileDeviceHistoryById200ApplicationJSONObject?: FindMobileDeviceHistoryById200ApplicationJSON;
}
