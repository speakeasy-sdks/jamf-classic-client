/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindComputersByMacAddressRequest extends SpeakeasyBase {
    /**
     * Mac address to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=macaddress" })
    macaddress: string;
}

export class FindComputersByMacAddress200ApplicationXMLCertificatesCertificate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    commonName?: string;

    @SpeakeasyMetadata()
    expiresEpoch?: number;

    @SpeakeasyMetadata()
    expiresUtc?: string;

    @SpeakeasyMetadata()
    identify?: boolean;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByMacAddress200ApplicationXMLCertificates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    certificate?: FindComputersByMacAddress200ApplicationXMLCertificatesCertificate;
}

export class FindComputersByMacAddress200ApplicationXMLConfigurationProfilesConfigurationProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    isRemovable?: boolean;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    uuid?: string;
}

export class FindComputersByMacAddress200ApplicationXMLConfigurationProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    configurationProfile?: FindComputersByMacAddress200ApplicationXMLConfigurationProfilesConfigurationProfile;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByMacAddress200ApplicationXMLExtensionAttributesExtensionAttribute extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    type?: string;

    @SpeakeasyMetadata()
    value?: string;
}

export class FindComputersByMacAddress200ApplicationXMLExtensionAttributes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    extensionAttribute?: FindComputersByMacAddress200ApplicationXMLExtensionAttributesExtensionAttribute;
}

export class FindComputersByMacAddress200ApplicationXMLGeneralManagementStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    enrolledViaDep?: boolean;

    @SpeakeasyMetadata()
    userApprovedEnrollment?: boolean;

    @SpeakeasyMetadata()
    userApprovedMdm?: boolean;
}

export class FindComputersByMacAddress200ApplicationXMLGeneralMdmCapableUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mdmCapableUser?: string;
}

export class FindComputersByMacAddress200ApplicationXMLGeneralRemoteManagement extends SpeakeasyBase {
    @SpeakeasyMetadata()
    managed?: boolean;

    @SpeakeasyMetadata()
    managementUsername?: string;
}

export class FindComputersByMacAddress200ApplicationXMLGeneralSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

export class FindComputersByMacAddress200ApplicationXMLGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    altMacAddress?: string;

    @SpeakeasyMetadata()
    altNetworkAdapterType?: string;

    @SpeakeasyMetadata()
    assetTag?: string;

    @SpeakeasyMetadata()
    barcode1?: string;

    @SpeakeasyMetadata()
    barcode2?: string;

    @SpeakeasyMetadata()
    distributionPoint?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    initialEntryDate?: string;

    @SpeakeasyMetadata()
    initialEntryDateEpoch?: number;

    @SpeakeasyMetadata()
    initialEntryDateUtc?: string;

    @SpeakeasyMetadata()
    ipAddress?: string;

    @SpeakeasyMetadata()
    itunesStoreAccountIsActive?: boolean;

    @SpeakeasyMetadata()
    jamfVersion?: string;

    @SpeakeasyMetadata()
    lastCloudBackupDateEpoch?: number;

    @SpeakeasyMetadata()
    lastCloudBackupDateUtc?: string;

    @SpeakeasyMetadata()
    lastContactTime?: string;

    @SpeakeasyMetadata()
    lastContactTimeEpoch?: number;

    @SpeakeasyMetadata()
    lastContactTimeUtc?: string;

    @SpeakeasyMetadata()
    lastEnrolledDateEpoch?: number;

    @SpeakeasyMetadata()
    lastEnrolledDateUtc?: string;

    @SpeakeasyMetadata()
    lastReportedIp?: string;

    @SpeakeasyMetadata()
    macAddress?: string;

    @SpeakeasyMetadata()
    managementStatus?: FindComputersByMacAddress200ApplicationXMLGeneralManagementStatus;

    @SpeakeasyMetadata()
    mdmCapable?: boolean;

    @SpeakeasyMetadata()
    mdmCapableUsers?: FindComputersByMacAddress200ApplicationXMLGeneralMdmCapableUsers;

    /**
     * Name of computer
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    networkAdapterType?: string;

    @SpeakeasyMetadata()
    platform?: string;

    @SpeakeasyMetadata()
    remoteManagement?: FindComputersByMacAddress200ApplicationXMLGeneralRemoteManagement;

    @SpeakeasyMetadata()
    reportDate?: string;

    @SpeakeasyMetadata()
    reportDateEpoch?: number;

    @SpeakeasyMetadata()
    reportDateUtc?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    site?: FindComputersByMacAddress200ApplicationXMLGeneralSite;

    @SpeakeasyMetadata()
    sus?: string;

    @SpeakeasyMetadata()
    udid?: string;
}

export class FindComputersByMacAddress200ApplicationXMLGroupsAccountsComputerGroupMemberships extends SpeakeasyBase {
    @SpeakeasyMetadata()
    group?: string;
}

export class FindComputersByMacAddress200ApplicationXMLGroupsAccountsLocalAccountsUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    administrator?: boolean;

    @SpeakeasyMetadata()
    filevaultEnabled?: boolean;

    @SpeakeasyMetadata()
    home?: string;

    @SpeakeasyMetadata()
    homeSize?: string;

    @SpeakeasyMetadata()
    homeSizeMb?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    realname?: string;

    @SpeakeasyMetadata()
    uid?: string;
}

export class FindComputersByMacAddress200ApplicationXMLGroupsAccountsLocalAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: FindComputersByMacAddress200ApplicationXMLGroupsAccountsLocalAccountsUser;
}

export class FindComputersByMacAddress200ApplicationXMLGroupsAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLGroupsAccountsComputerGroupMemberships,
    })
    computerGroupMemberships?: FindComputersByMacAddress200ApplicationXMLGroupsAccountsComputerGroupMemberships[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLGroupsAccountsLocalAccounts,
    })
    localAccounts?: FindComputersByMacAddress200ApplicationXMLGroupsAccountsLocalAccounts[];
}

export class FindComputersByMacAddress200ApplicationXMLHardwareFilevault2Users extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: string;
}

export class FindComputersByMacAddress200ApplicationXMLHardwareMappedPrintersPrinter extends SpeakeasyBase {
    @SpeakeasyMetadata()
    location?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    type?: string;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindComputersByMacAddress200ApplicationXMLHardwareMappedPrinters extends SpeakeasyBase {
    @SpeakeasyMetadata()
    printer?: FindComputersByMacAddress200ApplicationXMLHardwareMappedPrintersPrinter;
}

export enum FindComputersByMacAddress200ApplicationXMLHardwareSipStatus {
    Enabled = "Enabled",
    Disabled = "Disabled",
}

export class FindComputersByMacAddress200ApplicationXMLHardwareStorageDevicePartition extends SpeakeasyBase {
    @SpeakeasyMetadata()
    bootDriveAvailableMb?: number;

    @SpeakeasyMetadata()
    filevault2Percent?: number;

    @SpeakeasyMetadata()
    filevault2Status?: string;

    @SpeakeasyMetadata()
    filevaultPercent?: number;

    @SpeakeasyMetadata()
    filevaultStatus?: string;

    @SpeakeasyMetadata()
    lvUUID?: string;

    @SpeakeasyMetadata()
    lvgUUID?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    partitionCapacityMb?: number;

    @SpeakeasyMetadata()
    percentageFull?: number;

    @SpeakeasyMetadata()
    pvUUID?: string;

    @SpeakeasyMetadata()
    size?: number;

    @SpeakeasyMetadata()
    type?: string;
}

export class FindComputersByMacAddress200ApplicationXMLHardwareStorageDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    connectionType?: string;

    @SpeakeasyMetadata()
    disk?: string;

    @SpeakeasyMetadata()
    driveCapacityMb?: number;

    @SpeakeasyMetadata()
    model?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLHardwareStorageDevicePartition,
    })
    partition?: FindComputersByMacAddress200ApplicationXMLHardwareStorageDevicePartition[];

    @SpeakeasyMetadata()
    revision?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    size?: number;

    @SpeakeasyMetadata()
    smartStatus?: string;
}

export class FindComputersByMacAddress200ApplicationXMLHardwareStorage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    device?: FindComputersByMacAddress200ApplicationXMLHardwareStorageDevice;
}

export class FindComputersByMacAddress200ApplicationXMLHardware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    activeDirectoryStatus?: string;

    @SpeakeasyMetadata()
    availableRamSlots?: number;

    @SpeakeasyMetadata()
    batteryCapacity?: number;

    @SpeakeasyMetadata()
    bleCapable?: boolean;

    @SpeakeasyMetadata()
    bootRom?: string;

    @SpeakeasyMetadata()
    busSpeed?: number;

    @SpeakeasyMetadata()
    busSpeedMhz?: number;

    @SpeakeasyMetadata()
    cacheSize?: number;

    @SpeakeasyMetadata()
    cacheSizeKb?: number;

    @SpeakeasyMetadata()
    diskEncryptionConfiguration?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLHardwareFilevault2Users,
    })
    filevault2Users?: FindComputersByMacAddress200ApplicationXMLHardwareFilevault2Users[];

    @SpeakeasyMetadata()
    gatekeeperStatus?: string;

    @SpeakeasyMetadata()
    institutionalRecoveryKey?: string;

    @SpeakeasyMetadata()
    make?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLHardwareMappedPrinters,
    })
    mappedPrinters?: FindComputersByMacAddress200ApplicationXMLHardwareMappedPrinters[];

    @SpeakeasyMetadata()
    masterPasswordSet?: boolean;

    @SpeakeasyMetadata()
    model?: string;

    @SpeakeasyMetadata()
    modelIdentifier?: string;

    @SpeakeasyMetadata()
    nicSpeed?: string;

    @SpeakeasyMetadata()
    numberCores?: number;

    @SpeakeasyMetadata()
    numberProcessors?: number;

    @SpeakeasyMetadata()
    opticalDrive?: string;

    @SpeakeasyMetadata()
    osBuild?: string;

    @SpeakeasyMetadata()
    osName?: string;

    @SpeakeasyMetadata()
    osVersion?: string;

    @SpeakeasyMetadata()
    processorArchitechture?: string;

    @SpeakeasyMetadata()
    processorSpeed?: string;

    @SpeakeasyMetadata()
    processorSpeedMhz?: string;

    @SpeakeasyMetadata()
    processorType?: string;

    @SpeakeasyMetadata()
    servicePack?: string;

    @SpeakeasyMetadata()
    sipStatus?: FindComputersByMacAddress200ApplicationXMLHardwareSipStatus;

    @SpeakeasyMetadata()
    smcVersion?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationXMLHardwareStorage })
    storage?: FindComputersByMacAddress200ApplicationXMLHardwareStorage[];

    @SpeakeasyMetadata()
    totalRam?: number;

    @SpeakeasyMetadata()
    totalRamMb?: number;

    @SpeakeasyMetadata()
    xprotectVersion?: string;
}

export class FindComputersByMacAddress200ApplicationXMLLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    building?: string;

    @SpeakeasyMetadata()
    department?: string;

    @SpeakeasyMetadata()
    emailAddress?: string;

    @SpeakeasyMetadata()
    phone?: string;

    @SpeakeasyMetadata()
    phoneNumber?: string;

    @SpeakeasyMetadata()
    position?: string;

    @SpeakeasyMetadata()
    realName?: string;

    @SpeakeasyMetadata()
    realname?: string;

    @SpeakeasyMetadata()
    room?: string;

    @SpeakeasyMetadata()
    username?: string;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsAttachmentsAttachment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    filename?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsAttachments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    attachment?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsAttachmentsAttachment;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPeripheralFieldsField extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    value?: string;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPeripheralFields extends SpeakeasyBase {
    @SpeakeasyMetadata()
    field?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPeripheralFieldsField;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPeripheral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    barCode1?: string;

    @SpeakeasyMetadata()
    barCode2?: string;

    @SpeakeasyMetadata()
    fields?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPeripheralFields;

    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the peripheral type
     */
    @SpeakeasyMetadata()
    type?: string;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    applecareId?: string;

    @SpeakeasyMetadata()
    isLeased?: boolean;

    @SpeakeasyMetadata()
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    leaseExpires?: string;

    @SpeakeasyMetadata()
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    poDate?: string;

    @SpeakeasyMetadata()
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    poDateUtc?: string;

    @SpeakeasyMetadata()
    poNumber?: string;

    @SpeakeasyMetadata()
    purchasePrice?: string;

    @SpeakeasyMetadata()
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    purchasingContact?: string;

    @SpeakeasyMetadata()
    vendor?: string;

    @SpeakeasyMetadata()
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    warrantyExpiresUtc?: string;
}

export class FindComputersByMacAddress200ApplicationXMLPeripheralsPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsAttachments,
    })
    attachments?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsAttachments[];

    @SpeakeasyMetadata()
    peripheral?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPeripheral;

    @SpeakeasyMetadata()
    purchasing?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripheralsPurchasing;
}

export class FindComputersByMacAddress200ApplicationXMLPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripherals,
    })
    peripherals?: FindComputersByMacAddress200ApplicationXMLPeripheralsPeripherals[];

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByMacAddress200ApplicationXMLPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    applecareId?: string;

    @SpeakeasyMetadata()
    isLeased?: boolean;

    @SpeakeasyMetadata()
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    leaseExpires?: string;

    @SpeakeasyMetadata()
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    poDate?: string;

    @SpeakeasyMetadata()
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    poDateUtc?: string;

    @SpeakeasyMetadata()
    poNumber?: string;

    @SpeakeasyMetadata()
    purchasePrice?: string;

    @SpeakeasyMetadata()
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    purchasingContact?: string;

    @SpeakeasyMetadata()
    vendor?: string;

    @SpeakeasyMetadata()
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    warrantyExpiresUtc?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata()
    activationLock?: boolean;

    @SpeakeasyMetadata()
    externalBootLevel?: string;

    @SpeakeasyMetadata()
    firewallEnabled?: boolean;

    @SpeakeasyMetadata()
    recoveryLockEnabled?: boolean;

    @SpeakeasyMetadata()
    secureBootLevel?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareApplicationsApplication extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    path?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareApplications extends SpeakeasyBase {
    @SpeakeasyMetadata()
    application?: FindComputersByMacAddress200ApplicationXMLSoftwareApplicationsApplication;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareAvailableSoftwareUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareAvailableUpdatesUpdate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    packageName?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareAvailableUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    update?: FindComputersByMacAddress200ApplicationXMLSoftwareAvailableUpdatesUpdate;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareCachedByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    package?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareFontsFont extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    path?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareFonts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    font?: FindComputersByMacAddress200ApplicationXMLSoftwareFontsFont;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareInstalledByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    package?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareInstalledByInstallerSwu extends SpeakeasyBase {
    @SpeakeasyMetadata()
    package?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareLicensedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwarePluginsPlugin extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    path?: string;

    @SpeakeasyMetadata()
    version?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwarePlugins extends SpeakeasyBase {
    @SpeakeasyMetadata()
    plugin?: FindComputersByMacAddress200ApplicationXMLSoftwarePluginsPlugin;

    @SpeakeasyMetadata()
    size?: number;
}

export class FindComputersByMacAddress200ApplicationXMLSoftwareRunningServices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputersByMacAddress200ApplicationXMLSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationXMLSoftwareApplications })
    applications?: FindComputersByMacAddress200ApplicationXMLSoftwareApplications[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareAvailableSoftwareUpdates,
    })
    availableSoftwareUpdates?: FindComputersByMacAddress200ApplicationXMLSoftwareAvailableSoftwareUpdates[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareAvailableUpdates,
    })
    availableUpdates?: FindComputersByMacAddress200ApplicationXMLSoftwareAvailableUpdates[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareCachedByCasper,
    })
    cachedByCasper?: FindComputersByMacAddress200ApplicationXMLSoftwareCachedByCasper[];

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationXMLSoftwareFonts })
    fonts?: FindComputersByMacAddress200ApplicationXMLSoftwareFonts[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareInstalledByCasper,
    })
    installedByCasper?: FindComputersByMacAddress200ApplicationXMLSoftwareInstalledByCasper[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareInstalledByInstallerSwu,
    })
    installedByInstallerSwu?: FindComputersByMacAddress200ApplicationXMLSoftwareInstalledByInstallerSwu[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareLicensedSoftware,
    })
    licensedSoftware?: FindComputersByMacAddress200ApplicationXMLSoftwareLicensedSoftware[];

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationXMLSoftwarePlugins })
    plugins?: FindComputersByMacAddress200ApplicationXMLSoftwarePlugins[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLSoftwareRunningServices,
    })
    runningServices?: FindComputersByMacAddress200ApplicationXMLSoftwareRunningServices[];

    @SpeakeasyMetadata()
    unixExecutables?: string;
}

/**
 * OK
 */
export class FindComputersByMacAddress200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationXMLCertificates })
    certificates?: FindComputersByMacAddress200ApplicationXMLCertificates[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationXMLConfigurationProfiles,
    })
    configurationProfiles?: FindComputersByMacAddress200ApplicationXMLConfigurationProfiles[];

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationXMLExtensionAttributes })
    extensionAttributes?: FindComputersByMacAddress200ApplicationXMLExtensionAttributes[];

    @SpeakeasyMetadata()
    general?: FindComputersByMacAddress200ApplicationXMLGeneral;

    @SpeakeasyMetadata()
    groupsAccounts?: FindComputersByMacAddress200ApplicationXMLGroupsAccounts;

    @SpeakeasyMetadata()
    hardware?: FindComputersByMacAddress200ApplicationXMLHardware;

    @SpeakeasyMetadata()
    location?: FindComputersByMacAddress200ApplicationXMLLocation;

    @SpeakeasyMetadata()
    peripherals?: FindComputersByMacAddress200ApplicationXMLPeripherals;

    @SpeakeasyMetadata()
    purchasing?: FindComputersByMacAddress200ApplicationXMLPurchasing;

    @SpeakeasyMetadata()
    security?: FindComputersByMacAddress200ApplicationXMLSecurity;

    @SpeakeasyMetadata()
    software?: FindComputersByMacAddress200ApplicationXMLSoftware;
}

export class FindComputersByMacAddress200ApplicationJSONCertificatesCertificate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "common_name" })
    commonName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "expires_epoch" })
    expiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "expires_utc" })
    expiresUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "identify" })
    identify?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByMacAddress200ApplicationJSONCertificates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "certificate" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONCertificatesCertificate)
    certificate?: FindComputersByMacAddress200ApplicationJSONCertificatesCertificate;
}

export class FindComputersByMacAddress200ApplicationJSONConfigurationProfilesConfigurationProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_removable" })
    isRemovable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uuid" })
    uuid?: string;
}

export class FindComputersByMacAddress200ApplicationJSONConfigurationProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "configuration_profile" })
    @Type(
        () => FindComputersByMacAddress200ApplicationJSONConfigurationProfilesConfigurationProfile
    )
    configurationProfile?: FindComputersByMacAddress200ApplicationJSONConfigurationProfilesConfigurationProfile;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByMacAddress200ApplicationJSONExtensionAttributesExtensionAttribute extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class FindComputersByMacAddress200ApplicationJSONExtensionAttributes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "extension_attribute" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONExtensionAttributesExtensionAttribute)
    extensionAttribute?: FindComputersByMacAddress200ApplicationJSONExtensionAttributesExtensionAttribute;
}

export class FindComputersByMacAddress200ApplicationJSONGeneralManagementStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "enrolled_via_dep" })
    enrolledViaDep?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "user_approved_enrollment" })
    userApprovedEnrollment?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "user_approved_mdm" })
    userApprovedMdm?: boolean;
}

export class FindComputersByMacAddress200ApplicationJSONGeneralMdmCapableUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mdm_capable_user" })
    mdmCapableUser?: string;
}

export class FindComputersByMacAddress200ApplicationJSONGeneralRemoteManagement extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "managed" })
    managed?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "management_username" })
    managementUsername?: string;
}

export class FindComputersByMacAddress200ApplicationJSONGeneralSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class FindComputersByMacAddress200ApplicationJSONGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "alt_mac_address" })
    altMacAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "alt_network_adapter_type" })
    altNetworkAdapterType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "asset_tag" })
    assetTag?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "barcode_1" })
    barcode1?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "barcode_2" })
    barcode2?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "distribution_point" })
    distributionPoint?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_entry_date" })
    initialEntryDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_entry_date_epoch" })
    initialEntryDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_entry_date_utc" })
    initialEntryDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "ip_address" })
    ipAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "itunes_store_account_is_active" })
    itunesStoreAccountIsActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "jamf_version" })
    jamfVersion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_cloud_backup_date_epoch" })
    lastCloudBackupDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_cloud_backup_date_utc" })
    lastCloudBackupDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_contact_time" })
    lastContactTime?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_contact_time_epoch" })
    lastContactTimeEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_contact_time_utc" })
    lastContactTimeUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_enrolled_date_epoch" })
    lastEnrolledDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_enrolled_date_utc" })
    lastEnrolledDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_reported_ip" })
    lastReportedIp?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "mac_address" })
    macAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management_status" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGeneralManagementStatus)
    managementStatus?: FindComputersByMacAddress200ApplicationJSONGeneralManagementStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "mdm_capable" })
    mdmCapable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "mdm_capable_users" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGeneralMdmCapableUsers)
    mdmCapableUsers?: FindComputersByMacAddress200ApplicationJSONGeneralMdmCapableUsers;

    /**
     * Name of computer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "network_adapter_type" })
    networkAdapterType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "platform" })
    platform?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "remote_management" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGeneralRemoteManagement)
    remoteManagement?: FindComputersByMacAddress200ApplicationJSONGeneralRemoteManagement;

    @SpeakeasyMetadata()
    @Expose({ name: "report_date" })
    reportDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "report_date_epoch" })
    reportDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "report_date_utc" })
    reportDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGeneralSite)
    site?: FindComputersByMacAddress200ApplicationJSONGeneralSite;

    @SpeakeasyMetadata()
    @Expose({ name: "sus" })
    sus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class FindComputersByMacAddress200ApplicationJSONGroupsAccountsComputerGroupMemberships extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "group" })
    group?: string;
}

export class FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccountsUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "administrator" })
    administrator?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault_enabled" })
    filevaultEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "home" })
    home?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "home_size" })
    homeSize?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "home_size_mb" })
    homeSizeMb?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "realname" })
    realname?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uid" })
    uid?: string;
}

export class FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccountsUser)
    user?: FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccountsUser;
}

export class FindComputersByMacAddress200ApplicationJSONGroupsAccounts extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONGroupsAccountsComputerGroupMemberships,
    })
    @Expose({ name: "computer_group_memberships" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGroupsAccountsComputerGroupMemberships)
    computerGroupMemberships?: FindComputersByMacAddress200ApplicationJSONGroupsAccountsComputerGroupMemberships[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccounts,
    })
    @Expose({ name: "local_accounts" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccounts)
    localAccounts?: FindComputersByMacAddress200ApplicationJSONGroupsAccountsLocalAccounts[];
}

export class FindComputersByMacAddress200ApplicationJSONHardwareFilevault2Users extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    user?: string;
}

export class FindComputersByMacAddress200ApplicationJSONHardwareMappedPrintersPrinter extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "location" })
    location?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindComputersByMacAddress200ApplicationJSONHardwareMappedPrinters extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "printer" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardwareMappedPrintersPrinter)
    printer?: FindComputersByMacAddress200ApplicationJSONHardwareMappedPrintersPrinter;
}

export enum FindComputersByMacAddress200ApplicationJSONHardwareSipStatus {
    Enabled = "Enabled",
    Disabled = "Disabled",
}

export class FindComputersByMacAddress200ApplicationJSONHardwareStorageDevicePartition extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "boot_drive_available_mb" })
    bootDriveAvailableMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault2_percent" })
    filevault2Percent?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault2_status" })
    filevault2Status?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault_percent" })
    filevaultPercent?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "filevault_status" })
    filevaultStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lvUUID" })
    lvUUID?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lvgUUID" })
    lvgUUID?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "partition_capacity_mb" })
    partitionCapacityMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "percentage_full" })
    percentageFull?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "pvUUID" })
    pvUUID?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}

export class FindComputersByMacAddress200ApplicationJSONHardwareStorageDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "connection_type" })
    connectionType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "disk" })
    disk?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "drive_capacity_mb" })
    driveCapacityMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONHardwareStorageDevicePartition,
    })
    @Expose({ name: "partition" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardwareStorageDevicePartition)
    partition?: FindComputersByMacAddress200ApplicationJSONHardwareStorageDevicePartition[];

    @SpeakeasyMetadata()
    @Expose({ name: "revision" })
    revision?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "smart_status" })
    smartStatus?: string;
}

export class FindComputersByMacAddress200ApplicationJSONHardwareStorage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "device" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardwareStorageDevice)
    device?: FindComputersByMacAddress200ApplicationJSONHardwareStorageDevice;
}

export class FindComputersByMacAddress200ApplicationJSONHardware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "active_directory_status" })
    activeDirectoryStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "available_ram_slots" })
    availableRamSlots?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "battery_capacity" })
    batteryCapacity?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "ble_capable" })
    bleCapable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "boot_rom" })
    bootRom?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bus_speed" })
    busSpeed?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "bus_speed_mhz" })
    busSpeedMhz?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "cache_size" })
    cacheSize?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "cache_size_kb" })
    cacheSizeKb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "disk_encryption_configuration" })
    diskEncryptionConfiguration?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONHardwareFilevault2Users,
    })
    @Expose({ name: "filevault_2_users" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardwareFilevault2Users)
    filevault2Users?: FindComputersByMacAddress200ApplicationJSONHardwareFilevault2Users[];

    @SpeakeasyMetadata()
    @Expose({ name: "gatekeeper_status" })
    gatekeeperStatus?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "institutional_recovery_key" })
    institutionalRecoveryKey?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "make" })
    make?: string;

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONHardwareMappedPrinters,
    })
    @Expose({ name: "mapped_printers" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardwareMappedPrinters)
    mappedPrinters?: FindComputersByMacAddress200ApplicationJSONHardwareMappedPrinters[];

    @SpeakeasyMetadata()
    @Expose({ name: "master_password_set" })
    masterPasswordSet?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_identifier" })
    modelIdentifier?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "nic_speed" })
    nicSpeed?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "number_cores" })
    numberCores?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "number_processors" })
    numberProcessors?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "optical_drive" })
    opticalDrive?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "os_build" })
    osBuild?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "os_name" })
    osName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "os_version" })
    osVersion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_architechture" })
    processorArchitechture?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_speed" })
    processorSpeed?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_speed_mhz" })
    processorSpeedMhz?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "processor_type" })
    processorType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "service_pack" })
    servicePack?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sip_status" })
    sipStatus?: FindComputersByMacAddress200ApplicationJSONHardwareSipStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "smc_version" })
    smcVersion?: string;

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationJSONHardwareStorage })
    @Expose({ name: "storage" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardwareStorage)
    storage?: FindComputersByMacAddress200ApplicationJSONHardwareStorage[];

    @SpeakeasyMetadata()
    @Expose({ name: "total_ram" })
    totalRam?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "total_ram_mb" })
    totalRamMb?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "xprotect_version" })
    xprotectVersion?: string;
}

export class FindComputersByMacAddress200ApplicationJSONLocation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    building?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    department?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_number" })
    phoneNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "position" })
    position?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "real_name" })
    realName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "realname" })
    realname?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "room" })
    room?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "filename" })
    filename?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "attachment" })
    @Type(
        () => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment
    )
    attachment?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheralFields extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "field" })
    @Type(
        () => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField
    )
    field?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bar_code_1" })
    barCode1?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bar_code_2" })
    barCode2?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "fields" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheralFields)
    fields?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheralFields;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the peripheral type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "applecare_id" })
    applecareId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_leased" })
    isLeased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_purchased" })
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires" })
    leaseExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_epoch" })
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_utc" })
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "life_expectancy" })
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date" })
    poDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_epoch" })
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_utc" })
    poDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_number" })
    poNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchase_price" })
    purchasePrice?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_account" })
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_contact" })
    purchasingContact?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vendor" })
    vendor?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires" })
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_epoch" })
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_utc" })
    warrantyExpiresUtc?: string;
}

export class FindComputersByMacAddress200ApplicationJSONPeripheralsPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachments,
    })
    @Expose({ name: "attachments" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachments)
    attachments?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsAttachments[];

    @SpeakeasyMetadata()
    @Expose({ name: "peripheral" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheral)
    peripheral?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPeripheral;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPurchasing)
    purchasing?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripheralsPurchasing;
}

export class FindComputersByMacAddress200ApplicationJSONPeripherals extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripherals,
    })
    @Expose({ name: "peripherals" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPeripheralsPeripherals)
    peripherals?: FindComputersByMacAddress200ApplicationJSONPeripheralsPeripherals[];

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByMacAddress200ApplicationJSONPurchasing extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "applecare_id" })
    applecareId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_leased" })
    isLeased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_purchased" })
    isPurchased?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires" })
    leaseExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_epoch" })
    leaseExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "lease_expires_utc" })
    leaseExpiresUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "life_expectancy" })
    lifeExpectancy?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date" })
    poDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_epoch" })
    poDateEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "po_date_utc" })
    poDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "po_number" })
    poNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchase_price" })
    purchasePrice?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_account" })
    purchasingAccount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing_contact" })
    purchasingContact?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vendor" })
    vendor?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires" })
    warrantyExpires?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_epoch" })
    warrantyExpiresEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "warranty_expires_utc" })
    warrantyExpiresUtc?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "activation_lock" })
    activationLock?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "external_boot_level" })
    externalBootLevel?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "firewall_enabled" })
    firewallEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "recovery_lock_enabled" })
    recoveryLockEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "secure_boot_level" })
    secureBootLevel?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareApplicationsApplication extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareApplications extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "application" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareApplicationsApplication)
    application?: FindComputersByMacAddress200ApplicationJSONSoftwareApplicationsApplication;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareAvailableSoftwareUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdatesUpdate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "package_name" })
    packageName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdates extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "update" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdatesUpdate)
    update?: FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdatesUpdate;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareCachedByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareFontsFont extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareFonts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "font" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareFontsFont)
    font?: FindComputersByMacAddress200ApplicationJSONSoftwareFontsFont;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByCasper extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByInstallerSwu extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareLicensedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwarePluginsPlugin extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwarePlugins extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "plugin" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwarePluginsPlugin)
    plugin?: FindComputersByMacAddress200ApplicationJSONSoftwarePluginsPlugin;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class FindComputersByMacAddress200ApplicationJSONSoftwareRunningServices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputersByMacAddress200ApplicationJSONSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareApplications,
    })
    @Expose({ name: "applications" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareApplications)
    applications?: FindComputersByMacAddress200ApplicationJSONSoftwareApplications[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareAvailableSoftwareUpdates,
    })
    @Expose({ name: "available_software_updates" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareAvailableSoftwareUpdates)
    availableSoftwareUpdates?: FindComputersByMacAddress200ApplicationJSONSoftwareAvailableSoftwareUpdates[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdates,
    })
    @Expose({ name: "available_updates" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdates)
    availableUpdates?: FindComputersByMacAddress200ApplicationJSONSoftwareAvailableUpdates[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareCachedByCasper,
    })
    @Expose({ name: "cached_by_casper" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareCachedByCasper)
    cachedByCasper?: FindComputersByMacAddress200ApplicationJSONSoftwareCachedByCasper[];

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationJSONSoftwareFonts })
    @Expose({ name: "fonts" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareFonts)
    fonts?: FindComputersByMacAddress200ApplicationJSONSoftwareFonts[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByCasper,
    })
    @Expose({ name: "installed_by_casper" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByCasper)
    installedByCasper?: FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByCasper[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByInstallerSwu,
    })
    @Expose({ name: "installed_by_installer_swu" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByInstallerSwu)
    installedByInstallerSwu?: FindComputersByMacAddress200ApplicationJSONSoftwareInstalledByInstallerSwu[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareLicensedSoftware,
    })
    @Expose({ name: "licensed_software" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareLicensedSoftware)
    licensedSoftware?: FindComputersByMacAddress200ApplicationJSONSoftwareLicensedSoftware[];

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationJSONSoftwarePlugins })
    @Expose({ name: "plugins" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwarePlugins)
    plugins?: FindComputersByMacAddress200ApplicationJSONSoftwarePlugins[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONSoftwareRunningServices,
    })
    @Expose({ name: "running_services" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftwareRunningServices)
    runningServices?: FindComputersByMacAddress200ApplicationJSONSoftwareRunningServices[];

    @SpeakeasyMetadata()
    @Expose({ name: "unix_executables" })
    unixExecutables?: string;
}

/**
 * OK
 */
export class FindComputersByMacAddress200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationJSONCertificates })
    @Expose({ name: "certificates" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONCertificates)
    certificates?: FindComputersByMacAddress200ApplicationJSONCertificates[];

    @SpeakeasyMetadata({
        elemType: FindComputersByMacAddress200ApplicationJSONConfigurationProfiles,
    })
    @Expose({ name: "configuration_profiles" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONConfigurationProfiles)
    configurationProfiles?: FindComputersByMacAddress200ApplicationJSONConfigurationProfiles[];

    @SpeakeasyMetadata({ elemType: FindComputersByMacAddress200ApplicationJSONExtensionAttributes })
    @Expose({ name: "extension_attributes" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONExtensionAttributes)
    extensionAttributes?: FindComputersByMacAddress200ApplicationJSONExtensionAttributes[];

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGeneral)
    general?: FindComputersByMacAddress200ApplicationJSONGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "groups_accounts" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONGroupsAccounts)
    groupsAccounts?: FindComputersByMacAddress200ApplicationJSONGroupsAccounts;

    @SpeakeasyMetadata()
    @Expose({ name: "hardware" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONHardware)
    hardware?: FindComputersByMacAddress200ApplicationJSONHardware;

    @SpeakeasyMetadata()
    @Expose({ name: "location" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONLocation)
    location?: FindComputersByMacAddress200ApplicationJSONLocation;

    @SpeakeasyMetadata()
    @Expose({ name: "peripherals" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPeripherals)
    peripherals?: FindComputersByMacAddress200ApplicationJSONPeripherals;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONPurchasing)
    purchasing?: FindComputersByMacAddress200ApplicationJSONPurchasing;

    @SpeakeasyMetadata()
    @Expose({ name: "security" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSecurity)
    security?: FindComputersByMacAddress200ApplicationJSONSecurity;

    @SpeakeasyMetadata()
    @Expose({ name: "software" })
    @Type(() => FindComputersByMacAddress200ApplicationJSONSoftware)
    software?: FindComputersByMacAddress200ApplicationJSONSoftware;
}

export class FindComputersByMacAddressResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findComputersByMacAddress200ApplicationJSONObject?: FindComputersByMacAddress200ApplicationJSON;
}
