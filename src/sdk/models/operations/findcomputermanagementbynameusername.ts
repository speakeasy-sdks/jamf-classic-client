/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindComputerManagementByNameUsernameRequest extends SpeakeasyBase {
    /**
     * Computer name to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=name" })
    name: string;

    /**
     * Username to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=username" })
    username: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLEbooksEbook extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLEbooks extends SpeakeasyBase {
    @SpeakeasyMetadata()
    ebook?: FindComputerManagementByNameUsername200ApplicationXMLEbooksEbook;
}

export class FindComputerManagementByNameUsername200ApplicationXMLGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    macAddress?: string;

    /**
     * Name of the computer
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    serialNumber?: string;

    @SpeakeasyMetadata()
    udid?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLMacAppStoreAppsMacAppStoreApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLMacAppStoreApps extends SpeakeasyBase {
    @SpeakeasyMetadata()
    macAppStoreApp?: FindComputerManagementByNameUsername200ApplicationXMLMacAppStoreAppsMacAppStoreApp;
}

export class FindComputerManagementByNameUsername200ApplicationXMLManagedPreferenceProfilesProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLManagedPreferenceProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    profile?: FindComputerManagementByNameUsername200ApplicationXMLManagedPreferenceProfilesProfile;
}

export class FindComputerManagementByNameUsername200ApplicationXMLOsXConfigurationProfilesProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLOsXConfigurationProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    profile?: FindComputerManagementByNameUsername200ApplicationXMLOsXConfigurationProfilesProfile;
}

export class FindComputerManagementByNameUsername200ApplicationXMLPatchPoliciesPatchPolicy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLPatchPolicies extends SpeakeasyBase {
    @SpeakeasyMetadata()
    patchPolicy?: FindComputerManagementByNameUsername200ApplicationXMLPatchPoliciesPatchPolicy;
}

export class FindComputerManagementByNameUsername200ApplicationXMLPatchReportingSoftwareTitlesTitle extends SpeakeasyBase {
    @SpeakeasyMetadata()
    installedVersion?: string;

    @SpeakeasyMetadata()
    latestVersion?: string;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLPatchReportingSoftwareTitles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    title?: FindComputerManagementByNameUsername200ApplicationXMLPatchReportingSoftwareTitlesTitle;
}

export class FindComputerManagementByNameUsername200ApplicationXMLPoliciesPolicy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    trigger?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLPolicies extends SpeakeasyBase {
    @SpeakeasyMetadata()
    policy?: FindComputerManagementByNameUsername200ApplicationXMLPoliciesPolicy;
}

export class FindComputerManagementByNameUsername200ApplicationXMLRestrictedSoftwareSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLRestrictedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    software?: FindComputerManagementByNameUsername200ApplicationXMLRestrictedSoftwareSoftware;
}

export class FindComputerManagementByNameUsername200ApplicationXMLSmartGroupsGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLSmartGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    group?: FindComputerManagementByNameUsername200ApplicationXMLSmartGroupsGroup;
}

export class FindComputerManagementByNameUsername200ApplicationXMLStaticGroupsGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationXMLStaticGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    group?: FindComputerManagementByNameUsername200ApplicationXMLStaticGroupsGroup;
}

/**
 * OK
 */
export class FindComputerManagementByNameUsername200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputerManagementByNameUsername200ApplicationXMLEbooks })
    ebooks?: FindComputerManagementByNameUsername200ApplicationXMLEbooks[];

    @SpeakeasyMetadata()
    general?: FindComputerManagementByNameUsername200ApplicationXMLGeneral;

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLMacAppStoreApps,
    })
    macAppStoreApps?: FindComputerManagementByNameUsername200ApplicationXMLMacAppStoreApps[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLManagedPreferenceProfiles,
    })
    managedPreferenceProfiles?: FindComputerManagementByNameUsername200ApplicationXMLManagedPreferenceProfiles[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLOsXConfigurationProfiles,
    })
    osXConfigurationProfiles?: FindComputerManagementByNameUsername200ApplicationXMLOsXConfigurationProfiles[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLPatchPolicies,
    })
    patchPolicies?: FindComputerManagementByNameUsername200ApplicationXMLPatchPolicies[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLPatchReportingSoftwareTitles,
    })
    patchReportingSoftwareTitles?: FindComputerManagementByNameUsername200ApplicationXMLPatchReportingSoftwareTitles[];

    @SpeakeasyMetadata({ elemType: FindComputerManagementByNameUsername200ApplicationXMLPolicies })
    policies?: FindComputerManagementByNameUsername200ApplicationXMLPolicies[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLRestrictedSoftware,
    })
    restrictedSoftware?: FindComputerManagementByNameUsername200ApplicationXMLRestrictedSoftware[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLSmartGroups,
    })
    smartGroups?: FindComputerManagementByNameUsername200ApplicationXMLSmartGroups[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationXMLStaticGroups,
    })
    staticGroups?: FindComputerManagementByNameUsername200ApplicationXMLStaticGroups[];
}

export class FindComputerManagementByNameUsername200ApplicationJSONEbooksEbook extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONEbooks extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "ebook" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONEbooksEbook)
    ebook?: FindComputerManagementByNameUsername200ApplicationJSONEbooksEbook;
}

export class FindComputerManagementByNameUsername200ApplicationJSONGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "mac_address" })
    macAddress?: string;

    /**
     * Name of the computer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreAppsMacAppStoreApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreApps extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mac_app_store_app" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreAppsMacAppStoreApp)
    macAppStoreApp?: FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreAppsMacAppStoreApp;
}

export class FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfilesProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "profile" })
    @Type(
        () => FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfilesProfile
    )
    profile?: FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfilesProfile;
}

export class FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfilesProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfiles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "profile" })
    @Type(
        () => FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfilesProfile
    )
    profile?: FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfilesProfile;
}

export class FindComputerManagementByNameUsername200ApplicationJSONPatchPoliciesPatchPolicy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONPatchPolicies extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "patch_policy" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONPatchPoliciesPatchPolicy)
    patchPolicy?: FindComputerManagementByNameUsername200ApplicationJSONPatchPoliciesPatchPolicy;
}

export class FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitlesTitle extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "installed_version" })
    installedVersion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "latest_version" })
    latestVersion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitles extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    @Type(
        () =>
            FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitlesTitle
    )
    title?: FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitlesTitle;
}

export class FindComputerManagementByNameUsername200ApplicationJSONPoliciesPolicy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger" })
    trigger?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONPolicies extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "policy" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONPoliciesPolicy)
    policy?: FindComputerManagementByNameUsername200ApplicationJSONPoliciesPolicy;
}

export class FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftwareSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "software" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftwareSoftware)
    software?: FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftwareSoftware;
}

export class FindComputerManagementByNameUsername200ApplicationJSONSmartGroupsGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONSmartGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "group" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONSmartGroupsGroup)
    group?: FindComputerManagementByNameUsername200ApplicationJSONSmartGroupsGroup;
}

export class FindComputerManagementByNameUsername200ApplicationJSONStaticGroupsGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindComputerManagementByNameUsername200ApplicationJSONStaticGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "group" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONStaticGroupsGroup)
    group?: FindComputerManagementByNameUsername200ApplicationJSONStaticGroupsGroup;
}

/**
 * OK
 */
export class FindComputerManagementByNameUsername200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindComputerManagementByNameUsername200ApplicationJSONEbooks })
    @Expose({ name: "ebooks" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONEbooks)
    ebooks?: FindComputerManagementByNameUsername200ApplicationJSONEbooks[];

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONGeneral)
    general?: FindComputerManagementByNameUsername200ApplicationJSONGeneral;

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreApps,
    })
    @Expose({ name: "mac_app_store_apps" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreApps)
    macAppStoreApps?: FindComputerManagementByNameUsername200ApplicationJSONMacAppStoreApps[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfiles,
    })
    @Expose({ name: "managed_preference_profiles" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfiles)
    managedPreferenceProfiles?: FindComputerManagementByNameUsername200ApplicationJSONManagedPreferenceProfiles[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfiles,
    })
    @Expose({ name: "os_x_configuration_profiles" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfiles)
    osXConfigurationProfiles?: FindComputerManagementByNameUsername200ApplicationJSONOsXConfigurationProfiles[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONPatchPolicies,
    })
    @Expose({ name: "patch_policies" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONPatchPolicies)
    patchPolicies?: FindComputerManagementByNameUsername200ApplicationJSONPatchPolicies[];

    @SpeakeasyMetadata({
        elemType:
            FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitles,
    })
    @Expose({ name: "patch_reporting_software_titles" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitles)
    patchReportingSoftwareTitles?: FindComputerManagementByNameUsername200ApplicationJSONPatchReportingSoftwareTitles[];

    @SpeakeasyMetadata({ elemType: FindComputerManagementByNameUsername200ApplicationJSONPolicies })
    @Expose({ name: "policies" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONPolicies)
    policies?: FindComputerManagementByNameUsername200ApplicationJSONPolicies[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftware,
    })
    @Expose({ name: "restricted_software" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftware)
    restrictedSoftware?: FindComputerManagementByNameUsername200ApplicationJSONRestrictedSoftware[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONSmartGroups,
    })
    @Expose({ name: "smart_groups" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONSmartGroups)
    smartGroups?: FindComputerManagementByNameUsername200ApplicationJSONSmartGroups[];

    @SpeakeasyMetadata({
        elemType: FindComputerManagementByNameUsername200ApplicationJSONStaticGroups,
    })
    @Expose({ name: "static_groups" })
    @Type(() => FindComputerManagementByNameUsername200ApplicationJSONStaticGroups)
    staticGroups?: FindComputerManagementByNameUsername200ApplicationJSONStaticGroups[];
}

export class FindComputerManagementByNameUsernameResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findComputerManagementByNameUsername200ApplicationJSONObject?: FindComputerManagementByNameUsername200ApplicationJSON;
}
