/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindMobileDeviceApplicationsByIdRequest extends SpeakeasyBase {
    /**
     * ID value to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLAppConfiguration extends SpeakeasyBase {
    @SpeakeasyMetadata()
    preferences?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLGeneralCategory extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the category
     */
    @SpeakeasyMetadata()
    name: string;
}

export enum FindMobileDeviceApplicationsById200ApplicationXMLGeneralDeploymentType {
    MakeAvailableInSelfService = "Make Available in Self Service",
    InstallAutomaticallyPromptUsersToInstall = "Install Automatically/Prompt Users to Install",
}

export class FindMobileDeviceApplicationsById200ApplicationXMLGeneralIcon extends SpeakeasyBase {
    /**
     * base64 encoded
     */
    @SpeakeasyMetadata()
    data?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLGeneralIpa extends SpeakeasyBase {
    @SpeakeasyMetadata()
    data?: string;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLGeneralSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    bundleId: string;

    @SpeakeasyMetadata()
    category?: FindMobileDeviceApplicationsById200ApplicationXMLGeneralCategory;

    @SpeakeasyMetadata()
    deployAsManagedApp?: boolean;

    @SpeakeasyMetadata()
    deployAutomatically?: boolean;

    @SpeakeasyMetadata()
    deploymentType?: FindMobileDeviceApplicationsById200ApplicationXMLGeneralDeploymentType;

    @SpeakeasyMetadata()
    description?: string;

    @SpeakeasyMetadata()
    displayName?: string;

    @SpeakeasyMetadata()
    externalUrl?: string;

    @SpeakeasyMetadata()
    free?: boolean;

    @SpeakeasyMetadata()
    hostExternally?: boolean;

    @SpeakeasyMetadata()
    icon?: FindMobileDeviceApplicationsById200ApplicationXMLGeneralIcon;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    internalApp?: boolean;

    @SpeakeasyMetadata()
    ipa?: FindMobileDeviceApplicationsById200ApplicationXMLGeneralIpa;

    @SpeakeasyMetadata()
    itunesCountryRegion?: string;

    @SpeakeasyMetadata()
    itunesStoreUrl?: string;

    @SpeakeasyMetadata()
    itunesSyncTime?: number;

    @SpeakeasyMetadata()
    keepDescriptionAndIconUpToDate?: boolean;

    @SpeakeasyMetadata()
    makeAvailableAfterInstall?: boolean;

    @SpeakeasyMetadata()
    mobileDeviceProvisioningProfile?: number;

    @SpeakeasyMetadata()
    name: string;

    @SpeakeasyMetadata()
    preventBackupOfAppData?: boolean;

    @SpeakeasyMetadata()
    removeAppWhenMdmProfileIsRemoved?: boolean;

    @SpeakeasyMetadata()
    site?: FindMobileDeviceApplicationsById200ApplicationXMLGeneralSite;

    @SpeakeasyMetadata()
    takeOverManagement?: boolean;

    @SpeakeasyMetadata()
    version: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeBuildingsBuilding extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    building?: FindMobileDeviceApplicationsById200ApplicationXMLScopeBuildingsBuilding;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeDepartmentsDepartment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    department?: FindMobileDeviceApplicationsById200ApplicationXMLScopeDepartmentsDepartment;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsBuildingsBuilding extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    building?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsBuildingsBuilding;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsDepartmentsDepartment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    department?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsDepartmentsDepartment;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    userGroup?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDeviceGroupsMobileDeviceGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDeviceGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mobileDeviceGroup?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDeviceGroupsMobileDeviceGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    udid?: string;

    @SpeakeasyMetadata()
    wifiMacAddress?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mobileDevice?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDevicesMobileDevice;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsNetworkSegmentsNetworkSegment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the network segment
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    uid?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    networkSegment?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsNetworkSegmentsNetworkSegment;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    userGroup?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsBuildings,
    })
    buildings?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsBuildings[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsDepartments,
    })
    departments?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsDepartments[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUserGroups,
    })
    jssUserGroups?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUsers,
    })
    jssUsers?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsJssUsers[];

    @SpeakeasyMetadata({
        elemType:
            FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDeviceGroups,
    })
    mobileDeviceGroups?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDeviceGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDevices,
    })
    mobileDevices?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsMobileDevices[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsNetworkSegments,
    })
    networkSegments?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsNetworkSegments[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUserGroups,
    })
    userGroups?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUsers,
    })
    users?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusionsUsers[];
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    userGroup?: FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsNetworkSegmentsNetworkSegment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    networkSegment?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsNetworkSegmentsNetworkSegment;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    userGroup?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    user?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsNetworkSegments,
    })
    networkSegments?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsNetworkSegments[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUserGroups,
    })
    userGroups?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUsers,
    })
    users?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitationsUsers[];
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDeviceGroupsMobileDeviceGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDeviceGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mobileDeviceGroup?: FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDeviceGroupsMobileDeviceGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    udid?: string;

    @SpeakeasyMetadata()
    wifiMacAddress?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    mobileDevice?: FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDevicesMobileDevice;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    allJssUsers?: boolean;

    @SpeakeasyMetadata()
    allMobileDevices?: boolean;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeBuildings,
    })
    buildings?: FindMobileDeviceApplicationsById200ApplicationXMLScopeBuildings[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeDepartments,
    })
    departments?: FindMobileDeviceApplicationsById200ApplicationXMLScopeDepartments[];

    @SpeakeasyMetadata()
    exclusions?: FindMobileDeviceApplicationsById200ApplicationXMLScopeExclusions;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUserGroups,
    })
    jssUserGroups?: FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUserGroups[];

    @SpeakeasyMetadata({ elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUsers })
    jssUsers?: FindMobileDeviceApplicationsById200ApplicationXMLScopeJssUsers[];

    @SpeakeasyMetadata()
    limitations?: FindMobileDeviceApplicationsById200ApplicationXMLScopeLimitations;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDeviceGroups,
    })
    mobileDeviceGroups?: FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDeviceGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDevices,
    })
    mobileDevices?: FindMobileDeviceApplicationsById200ApplicationXMLScopeMobileDevices[];
}

export class FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceCategoriesCategory extends SpeakeasyBase {
    @SpeakeasyMetadata()
    displayIn?: boolean;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceCategories extends SpeakeasyBase {
    @SpeakeasyMetadata()
    category?: FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceCategoriesCategory;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceIcon extends SpeakeasyBase {
    /**
     * base64 encoded
     */
    @SpeakeasyMetadata()
    data?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;

    @SpeakeasyMetadata()
    uri?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLSelfService extends SpeakeasyBase {
    @SpeakeasyMetadata()
    featureOnMainPage?: boolean;

    @SpeakeasyMetadata()
    notification?: boolean;

    @SpeakeasyMetadata()
    notificationMessage?: string;

    @SpeakeasyMetadata()
    notificationSubject?: string;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceCategories,
    })
    selfServiceCategories?: FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceCategories[];

    @SpeakeasyMetadata()
    selfServiceDescription?: string;

    @SpeakeasyMetadata()
    selfServiceIcon?: FindMobileDeviceApplicationsById200ApplicationXMLSelfServiceSelfServiceIcon;
}

export class FindMobileDeviceApplicationsById200ApplicationXMLVpp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    assignVppDeviceBasedLicenses?: boolean;

    @SpeakeasyMetadata()
    vppAdminAccountId?: number;
}

/**
 * OK
 */
export class FindMobileDeviceApplicationsById200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata()
    appConfiguration?: FindMobileDeviceApplicationsById200ApplicationXMLAppConfiguration;

    @SpeakeasyMetadata()
    general?: FindMobileDeviceApplicationsById200ApplicationXMLGeneral;

    @SpeakeasyMetadata()
    scope?: FindMobileDeviceApplicationsById200ApplicationXMLScope;

    @SpeakeasyMetadata()
    selfService?: FindMobileDeviceApplicationsById200ApplicationXMLSelfService;

    @SpeakeasyMetadata()
    vpp?: FindMobileDeviceApplicationsById200ApplicationXMLVpp;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONAppConfiguration extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "preferences" })
    preferences?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONGeneralCategory extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the category
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export enum FindMobileDeviceApplicationsById200ApplicationJSONGeneralDeploymentType {
    MakeAvailableInSelfService = "Make Available in Self Service",
    InstallAutomaticallyPromptUsersToInstall = "Install Automatically/Prompt Users to Install",
}

export class FindMobileDeviceApplicationsById200ApplicationJSONGeneralIcon extends SpeakeasyBase {
    /**
     * base64 encoded
     */
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    data?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONGeneralIpa extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    data?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONGeneralSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bundle_id" })
    bundleId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONGeneralCategory)
    category?: FindMobileDeviceApplicationsById200ApplicationJSONGeneralCategory;

    @SpeakeasyMetadata()
    @Expose({ name: "deploy_as_managed_app" })
    deployAsManagedApp?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "deploy_automatically" })
    deployAutomatically?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "deployment_type" })
    deploymentType?: FindMobileDeviceApplicationsById200ApplicationJSONGeneralDeploymentType;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "display_name" })
    displayName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "external_url" })
    externalUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "free" })
    free?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "host_externally" })
    hostExternally?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "icon" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONGeneralIcon)
    icon?: FindMobileDeviceApplicationsById200ApplicationJSONGeneralIcon;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "internal_app" })
    internalApp?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "ipa" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONGeneralIpa)
    ipa?: FindMobileDeviceApplicationsById200ApplicationJSONGeneralIpa;

    @SpeakeasyMetadata()
    @Expose({ name: "itunes_country_region" })
    itunesCountryRegion?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "itunes_store_url" })
    itunesStoreUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "itunes_sync_time" })
    itunesSyncTime?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "keep_description_and_icon_up_to_date" })
    keepDescriptionAndIconUpToDate?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "make_available_after_install" })
    makeAvailableAfterInstall?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device_provisioning_profile" })
    mobileDeviceProvisioningProfile?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "prevent_backup_of_app_data" })
    preventBackupOfAppData?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "remove_app_when_mdm_profile_is_removed" })
    removeAppWhenMdmProfileIsRemoved?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONGeneralSite)
    site?: FindMobileDeviceApplicationsById200ApplicationJSONGeneralSite;

    @SpeakeasyMetadata()
    @Expose({ name: "take_over_management" })
    takeOverManagement?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildingsBuilding extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildingsBuilding)
    building?: FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildingsBuilding;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartmentsDepartment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartmentsDepartment)
    department?: FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartmentsDepartment;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildingsBuilding extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildingsBuilding)
    building?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildingsBuilding;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartmentsDepartment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(
        () => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartmentsDepartment
    )
    department?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartmentsDepartment;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroupsUserGroup
    )
    userGroup?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsersUser)
    user?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroupsMobileDeviceGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device_group" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroupsMobileDeviceGroup
    )
    mobileDeviceGroup?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroupsMobileDeviceGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "wifi_mac_address" })
    wifiMacAddress?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevicesMobileDevice
    )
    mobileDevice?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevicesMobileDevice;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegmentsNetworkSegment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the network segment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uid" })
    uid?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "network_segment" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegmentsNetworkSegment
    )
    networkSegment?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegmentsNetworkSegment;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(
        () => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroupsUserGroup
    )
    userGroup?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsersUser)
    user?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildings,
    })
    @Expose({ name: "buildings" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildings)
    buildings?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsBuildings[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartments,
    })
    @Expose({ name: "departments" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartments)
    departments?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsDepartments[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroups,
    })
    @Expose({ name: "jss_user_groups" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroups)
    jssUserGroups?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsers,
    })
    @Expose({ name: "jss_users" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsers)
    jssUsers?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsJssUsers[];

    @SpeakeasyMetadata({
        elemType:
            FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroups,
    })
    @Expose({ name: "mobile_device_groups" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroups)
    mobileDeviceGroups?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDeviceGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevices,
    })
    @Expose({ name: "mobile_devices" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevices)
    mobileDevices?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsMobileDevices[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegments,
    })
    @Expose({ name: "network_segments" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegments)
    networkSegments?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsNetworkSegments[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroups,
    })
    @Expose({ name: "user_groups" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroups)
    userGroups?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsers,
    })
    @Expose({ name: "users" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsers)
    users?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusionsUsers[];
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroupsUserGroup)
    userGroup?: FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsersUser)
    user?: FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegmentsNetworkSegment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "network_segment" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegmentsNetworkSegment
    )
    networkSegment?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegmentsNetworkSegment;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(
        () => FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroupsUserGroup
    )
    userGroup?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroupsUserGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsersUser)
    user?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsersUser;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegments,
    })
    @Expose({ name: "network_segments" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegments)
    networkSegments?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsNetworkSegments[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroups,
    })
    @Expose({ name: "user_groups" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroups)
    userGroups?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsers,
    })
    @Expose({ name: "users" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsers)
    users?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitationsUsers[];
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroupsMobileDeviceGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device_group" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroupsMobileDeviceGroup
    )
    mobileDeviceGroup?: FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroupsMobileDeviceGroup;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "wifi_mac_address" })
    wifiMacAddress?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevicesMobileDevice)
    mobileDevice?: FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevicesMobileDevice;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "all_jss_users" })
    allJssUsers?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "all_mobile_devices" })
    allMobileDevices?: boolean;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildings,
    })
    @Expose({ name: "buildings" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildings)
    buildings?: FindMobileDeviceApplicationsById200ApplicationJSONScopeBuildings[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartments,
    })
    @Expose({ name: "departments" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartments)
    departments?: FindMobileDeviceApplicationsById200ApplicationJSONScopeDepartments[];

    @SpeakeasyMetadata()
    @Expose({ name: "exclusions" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusions)
    exclusions?: FindMobileDeviceApplicationsById200ApplicationJSONScopeExclusions;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroups,
    })
    @Expose({ name: "jss_user_groups" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroups)
    jssUserGroups?: FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUserGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsers,
    })
    @Expose({ name: "jss_users" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsers)
    jssUsers?: FindMobileDeviceApplicationsById200ApplicationJSONScopeJssUsers[];

    @SpeakeasyMetadata()
    @Expose({ name: "limitations" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitations)
    limitations?: FindMobileDeviceApplicationsById200ApplicationJSONScopeLimitations;

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroups,
    })
    @Expose({ name: "mobile_device_groups" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroups)
    mobileDeviceGroups?: FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDeviceGroups[];

    @SpeakeasyMetadata({
        elemType: FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevices,
    })
    @Expose({ name: "mobile_devices" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevices)
    mobileDevices?: FindMobileDeviceApplicationsById200ApplicationJSONScopeMobileDevices[];
}

export class FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategoriesCategory extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "display_in" })
    displayIn?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategories extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    @Type(
        () =>
            FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategoriesCategory
    )
    category?: FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategoriesCategory;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceIcon extends SpeakeasyBase {
    /**
     * base64 encoded
     */
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    data?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONSelfService extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "feature_on_main_page" })
    featureOnMainPage?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "notification" })
    notification?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_message" })
    notificationMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_subject" })
    notificationSubject?: string;

    @SpeakeasyMetadata({
        elemType:
            FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategories,
    })
    @Expose({ name: "self_service_categories" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategories)
    selfServiceCategories?: FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceCategories[];

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_description" })
    selfServiceDescription?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_icon" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceIcon)
    selfServiceIcon?: FindMobileDeviceApplicationsById200ApplicationJSONSelfServiceSelfServiceIcon;
}

export class FindMobileDeviceApplicationsById200ApplicationJSONVpp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "assign_vpp_device_based_licenses" })
    assignVppDeviceBasedLicenses?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "vpp_admin_account_id" })
    vppAdminAccountId?: number;
}

/**
 * OK
 */
export class FindMobileDeviceApplicationsById200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "app_configuration" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONAppConfiguration)
    appConfiguration?: FindMobileDeviceApplicationsById200ApplicationJSONAppConfiguration;

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONGeneral)
    general?: FindMobileDeviceApplicationsById200ApplicationJSONGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONScope)
    scope?: FindMobileDeviceApplicationsById200ApplicationJSONScope;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONSelfService)
    selfService?: FindMobileDeviceApplicationsById200ApplicationJSONSelfService;

    @SpeakeasyMetadata()
    @Expose({ name: "vpp" })
    @Type(() => FindMobileDeviceApplicationsById200ApplicationJSONVpp)
    vpp?: FindMobileDeviceApplicationsById200ApplicationJSONVpp;
}

export class FindMobileDeviceApplicationsByIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findMobileDeviceApplicationsById200ApplicationJSONObject?: FindMobileDeviceApplicationsById200ApplicationJSON;
}
