/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Subset to filter by
 */
export enum FindMobileDevicesByUDIDSubsetSubset {
    General = "General",
    Location = "Location",
    Purchasing = "Purchasing",
    Applications = "Applications",
    Security = "Security",
    Network = "Network",
    Certificates = "Certificates",
    ConfigurationProfiles = "ConfigurationProfiles",
    ProvisioningProfiles = "ProvisioningProfiles",
    MobileDeviceGroups = "MobileDeviceGroups",
    ExtensionAttributes = "ExtensionAttributes",
}

export class FindMobileDevicesByUDIDSubsetRequest extends SpeakeasyBase {
    /**
     * Subset to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=subset" })
    subset: FindMobileDevicesByUDIDSubsetSubset;

    /**
     * UDID to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=udid" })
    udid: string;
}

export class FindMobileDevicesByUDIDSubsetResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    mobileDevice?: shared.MobileDevice;
}
