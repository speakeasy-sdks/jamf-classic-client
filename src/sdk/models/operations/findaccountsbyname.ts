/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindAccountsByNameRequest extends SpeakeasyBase {
    /**
     * Name to filter by
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=name" })
    name: string;
}

export enum FindAccountsByName200ApplicationXMLAccessLevel {
    FullAccess = "Full Access",
    SiteAccess = "Site Access",
    GroupAccess = "Group Access",
}

export enum FindAccountsByName200ApplicationXMLEnabled {
    Enabled = "Enabled",
    Disabled = "Disabled",
}

export class FindAccountsByName200ApplicationXMLLdapServer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    name?: string;
}

export enum FindAccountsByName200ApplicationXMLPrivilegeSet {
    Administrator = "Administrator",
    Auditor = "Auditor",
    EnrollmentOnly = "Enrollment Only",
    Custom = "Custom",
}

export class FindAccountsByName200ApplicationXMLPrivilegesCasperAdmin extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivilegesCasperImaging extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivilegesCasperRemote extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivilegesJssActions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivilegesJssObjects extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivilegesJssSettings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivilegesRecon extends SpeakeasyBase {
    @SpeakeasyMetadata()
    privilege?: string;
}

export class FindAccountsByName200ApplicationXMLPrivileges extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesCasperAdmin })
    casperAdmin?: FindAccountsByName200ApplicationXMLPrivilegesCasperAdmin[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesCasperImaging })
    casperImaging?: FindAccountsByName200ApplicationXMLPrivilegesCasperImaging[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesCasperRemote })
    casperRemote?: FindAccountsByName200ApplicationXMLPrivilegesCasperRemote[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesJssActions })
    jssActions?: FindAccountsByName200ApplicationXMLPrivilegesJssActions[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesJssObjects })
    jssObjects?: FindAccountsByName200ApplicationXMLPrivilegesJssObjects[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesJssSettings })
    jssSettings?: FindAccountsByName200ApplicationXMLPrivilegesJssSettings[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationXMLPrivilegesRecon })
    recon?: FindAccountsByName200ApplicationXMLPrivilegesRecon[];
}

export class FindAccountsByName200ApplicationXMLSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    name: string;
}

/**
 * OK
 */
export class FindAccountsByName200ApplicationXML extends SpeakeasyBase {
    @SpeakeasyMetadata()
    accessLevel?: FindAccountsByName200ApplicationXMLAccessLevel;

    @SpeakeasyMetadata()
    directoryUser?: boolean;

    @SpeakeasyMetadata()
    email?: string;

    @SpeakeasyMetadata()
    emailAddress?: string;

    @SpeakeasyMetadata()
    enabled?: FindAccountsByName200ApplicationXMLEnabled;

    @SpeakeasyMetadata()
    forcePasswordChange?: boolean;

    @SpeakeasyMetadata()
    fullName?: string;

    @SpeakeasyMetadata()
    id?: number;

    @SpeakeasyMetadata()
    ldapServer?: FindAccountsByName200ApplicationXMLLdapServer;

    /**
     * Name of the account
     */
    @SpeakeasyMetadata()
    name: string;

    @SpeakeasyMetadata()
    privilegeSet?: FindAccountsByName200ApplicationXMLPrivilegeSet;

    @SpeakeasyMetadata()
    privileges?: FindAccountsByName200ApplicationXMLPrivileges;

    @SpeakeasyMetadata()
    site?: FindAccountsByName200ApplicationXMLSite;
}

export enum FindAccountsByName200ApplicationJSONAccessLevel {
    FullAccess = "Full Access",
    SiteAccess = "Site Access",
    GroupAccess = "Group Access",
}

export enum FindAccountsByName200ApplicationJSONEnabled {
    Enabled = "Enabled",
    Disabled = "Disabled",
}

export class FindAccountsByName200ApplicationJSONLdapServer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export enum FindAccountsByName200ApplicationJSONPrivilegeSet {
    Administrator = "Administrator",
    Auditor = "Auditor",
    EnrollmentOnly = "Enrollment Only",
    Custom = "Custom",
}

export class FindAccountsByName200ApplicationJSONPrivilegesCasperAdmin extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivilegesCasperImaging extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivilegesCasperRemote extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivilegesJssActions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivilegesJssObjects extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivilegesJssSettings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivilegesRecon extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "privilege" })
    privilege?: string;
}

export class FindAccountsByName200ApplicationJSONPrivileges extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesCasperAdmin })
    @Expose({ name: "casper_admin" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesCasperAdmin)
    casperAdmin?: FindAccountsByName200ApplicationJSONPrivilegesCasperAdmin[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesCasperImaging })
    @Expose({ name: "casper_imaging" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesCasperImaging)
    casperImaging?: FindAccountsByName200ApplicationJSONPrivilegesCasperImaging[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesCasperRemote })
    @Expose({ name: "casper_remote" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesCasperRemote)
    casperRemote?: FindAccountsByName200ApplicationJSONPrivilegesCasperRemote[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesJssActions })
    @Expose({ name: "jss_actions" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesJssActions)
    jssActions?: FindAccountsByName200ApplicationJSONPrivilegesJssActions[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesJssObjects })
    @Expose({ name: "jss_objects" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesJssObjects)
    jssObjects?: FindAccountsByName200ApplicationJSONPrivilegesJssObjects[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesJssSettings })
    @Expose({ name: "jss_settings" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesJssSettings)
    jssSettings?: FindAccountsByName200ApplicationJSONPrivilegesJssSettings[];

    @SpeakeasyMetadata({ elemType: FindAccountsByName200ApplicationJSONPrivilegesRecon })
    @Expose({ name: "recon" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivilegesRecon)
    recon?: FindAccountsByName200ApplicationJSONPrivilegesRecon[];
}

export class FindAccountsByName200ApplicationJSONSite extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the site
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

/**
 * OK
 */
export class FindAccountsByName200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "access_level" })
    accessLevel?: FindAccountsByName200ApplicationJSONAccessLevel;

    @SpeakeasyMetadata()
    @Expose({ name: "directory_user" })
    directoryUser?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "enabled" })
    enabled?: FindAccountsByName200ApplicationJSONEnabled;

    @SpeakeasyMetadata()
    @Expose({ name: "force_password_change" })
    forcePasswordChange?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "full_name" })
    fullName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "ldap_server" })
    @Type(() => FindAccountsByName200ApplicationJSONLdapServer)
    ldapServer?: FindAccountsByName200ApplicationJSONLdapServer;

    /**
     * Name of the account
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "privilege_set" })
    privilegeSet?: FindAccountsByName200ApplicationJSONPrivilegeSet;

    @SpeakeasyMetadata()
    @Expose({ name: "privileges" })
    @Type(() => FindAccountsByName200ApplicationJSONPrivileges)
    privileges?: FindAccountsByName200ApplicationJSONPrivileges;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => FindAccountsByName200ApplicationJSONSite)
    site?: FindAccountsByName200ApplicationJSONSite;
}

export class FindAccountsByNameResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    findAccountsByName200ApplicationJSONObject?: FindAccountsByName200ApplicationJSON;
}
