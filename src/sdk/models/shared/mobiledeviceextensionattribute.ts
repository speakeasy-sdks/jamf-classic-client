/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum MobileDeviceExtensionAttributeDateType {
    String = "String",
    Date = "Date",
    Integer = "Integer",
}

export enum MobileDeviceExtensionAttributeInputTypeType {
    TextField = "Text Field",
    PopUpMenu = "Pop-up Menu",
    LDAPAttributeMapping = "LDAP Attribute Mapping",
}

export class MobileDeviceExtensionAttributeInputType extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: MobileDeviceExtensionAttributeInputTypeType;
}

export enum MobileDeviceExtensionAttributeInventoryDisplay {
    General = "General",
    Hardware = "Hardware",
    UserAndLocation = "User and Location",
    Purchasing = "Purchasing",
    ExtensionAttributes = "Extension Attributes",
}

/**
 * OK
 */
export class MobileDeviceExtensionAttribute extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "date_type" })
    dateType?: MobileDeviceExtensionAttributeDateType;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "input_type" })
    @Type(() => MobileDeviceExtensionAttributeInputType)
    inputType?: MobileDeviceExtensionAttributeInputType;

    @SpeakeasyMetadata()
    @Expose({ name: "inventory_display" })
    inventoryDisplay?: MobileDeviceExtensionAttributeInventoryDisplay;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}
