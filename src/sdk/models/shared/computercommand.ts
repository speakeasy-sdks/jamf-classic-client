/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ComputerCommandComputer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class ComputerCommandComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => ComputerCommandComputer)
    computer?: ComputerCommandComputer;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class ComputerCommandGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "apns_result_status" })
    apnsResultStatus?: string;

    /**
     * Command type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "command" })
    command?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_sent" })
    dateSent?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_sent_epoch" })
    dateSentEpoch?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "date_sent_utc" })
    dateSentUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "profile_id" })
    profileId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "profile_udid" })
    profileUdid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uuid" })
    uuid?: string;
}

export class ComputerCommand extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computers" })
    @Type(() => ComputerCommandComputers)
    computers?: ComputerCommandComputers;

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => ComputerCommandGeneral)
    general?: ComputerCommandGeneral;
}
