/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SiteObject } from "./siteobject";
import { Expose, Type } from "class-transformer";

export enum UserGroupCriteriaCriterionAndOr {
    And = "and",
    Or = "or",
}

export class UserGroupCriteriaCriterion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "and_or" })
    andOr?: UserGroupCriteriaCriterionAndOr;

    @SpeakeasyMetadata()
    @Expose({ name: "closing_paren" })
    closingParen?: boolean;

    /**
     * Name of the criteria
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "opening_paren" })
    openingParen?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "priority" })
    priority?: number;

    /**
     * Operator
     */
    @SpeakeasyMetadata()
    @Expose({ name: "search_type" })
    searchType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

export class UserGroupCriteria extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "criterion" })
    @Type(() => UserGroupCriteriaCriterion)
    criterion?: UserGroupCriteriaCriterion;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;
}

export class UserGroupUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "full_name" })
    fullName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_number" })
    phoneNumber?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}

export class UserGroupUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => UserGroupUsersUser)
    user?: UserGroupUsersUser;
}

export class UserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: UserGroupCriteria })
    @Expose({ name: "criteria" })
    @Type(() => UserGroupCriteria)
    criteria?: UserGroupCriteria[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_notify_on_change" })
    isNotifyOnChange?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_smart" })
    isSmart: boolean;

    /**
     * Name of the user group
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => SiteObject)
    site?: SiteObject;

    @SpeakeasyMetadata({ elemType: UserGroupUsers })
    @Expose({ name: "users" })
    @Type(() => UserGroupUsers)
    users?: UserGroupUsers[];
}
