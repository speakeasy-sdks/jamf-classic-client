/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IdName } from "./idname";
import { SiteObject } from "./siteobject";
import { Expose, Type } from "class-transformer";

export class RestrictedSoftwareGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "delete_executable" })
    deleteExecutable?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "display_message" })
    displayMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "kill_process" })
    killProcess?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "match_exact_process_name" })
    matchExactProcessName?: boolean;

    /**
     * Name of the restricted software
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "process_name" })
    processName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "send_notification" })
    sendNotification?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => SiteObject)
    site?: SiteObject;
}

export class RestrictedSoftwareBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => IdName)
    building?: IdName;
}

export class RestrictedSoftwareComputerGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer_group" })
    @Type(() => IdName)
    computerGroup?: IdName;
}

export class RestrictedSoftwareComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => IdName)
    computer?: IdName;
}

export class RestrictedSoftwareDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => IdName)
    department?: IdName;
}

export class RestrictedSoftwareSchemasBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => IdName)
    building?: IdName;
}

export class RestrictedSoftwareSchemasComputerGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer_group" })
    @Type(() => IdName)
    computerGroup?: IdName;
}

export class RestrictedSoftwareSchemasComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => IdName)
    computer?: IdName;
}

export class RestrictedSoftwareSchemasDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => IdName)
    department?: IdName;
}

export class RestrictedSoftwareUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class RestrictedSoftwareExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: RestrictedSoftwareSchemasBuildings })
    @Expose({ name: "buildings" })
    @Type(() => RestrictedSoftwareSchemasBuildings)
    buildings?: RestrictedSoftwareSchemasBuildings[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareSchemasComputerGroups })
    @Expose({ name: "computer_groups" })
    @Type(() => RestrictedSoftwareSchemasComputerGroups)
    computerGroups?: RestrictedSoftwareSchemasComputerGroups[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareSchemasComputers })
    @Expose({ name: "computers" })
    @Type(() => RestrictedSoftwareSchemasComputers)
    computers?: RestrictedSoftwareSchemasComputers[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareSchemasDepartments })
    @Expose({ name: "departments" })
    @Type(() => RestrictedSoftwareSchemasDepartments)
    departments?: RestrictedSoftwareSchemasDepartments[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareUsers })
    @Expose({ name: "users" })
    @Type(() => RestrictedSoftwareUsers)
    users?: RestrictedSoftwareUsers[];
}

export class RestrictedSoftwareScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "all_computers" })
    allComputers?: boolean;

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareBuildings })
    @Expose({ name: "buildings" })
    @Type(() => RestrictedSoftwareBuildings)
    buildings?: RestrictedSoftwareBuildings[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareComputerGroups })
    @Expose({ name: "computer_groups" })
    @Type(() => RestrictedSoftwareComputerGroups)
    computerGroups?: RestrictedSoftwareComputerGroups[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareComputers })
    @Expose({ name: "computers" })
    @Type(() => RestrictedSoftwareComputers)
    computers?: RestrictedSoftwareComputers[];

    @SpeakeasyMetadata({ elemType: RestrictedSoftwareDepartments })
    @Expose({ name: "departments" })
    @Type(() => RestrictedSoftwareDepartments)
    departments?: RestrictedSoftwareDepartments[];

    @SpeakeasyMetadata()
    @Expose({ name: "exclusions" })
    @Type(() => RestrictedSoftwareExclusions)
    exclusions?: RestrictedSoftwareExclusions;
}

export class RestrictedSoftware extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => RestrictedSoftwareGeneral)
    general?: RestrictedSoftwareGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    @Type(() => RestrictedSoftwareScope)
    scope?: RestrictedSoftwareScope;
}
