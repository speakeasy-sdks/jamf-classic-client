/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IdName } from "./idname";
import { Expose, Type } from "class-transformer";

export enum VppInvitationDistributionMethod {
    PromptUsersToAcceptMakeAvailableInSelfService = "Prompt users to accept/make available in Self Service",
    SendEmails = "Send emails",
    MakeAvailableInSelfServiceOnly = "Make available in Self Service only",
}

export class VppInvitationVppAccount extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;
}

export class VppInvitationGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "distribution_method" })
    distributionMethod?: VppInvitationDistributionMethod;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "require_login" })
    requireLogin?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "sender_email_address" })
    senderEmailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sender_name" })
    senderName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "subject" })
    subject?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vpp_account" })
    @Type(() => VppInvitationVppAccount)
    vppAccount?: VppInvitationVppAccount;
}

export class VppInvitationUsage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email_address" })
    emailAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_action_date_utc" })
    lastActionDateUtc?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_action_epoch" })
    lastActionEpoch?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vpp_account" })
    vppAccount?: string;
}

export class InvitationUsage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "usage" })
    @Type(() => VppInvitationUsage)
    usage?: VppInvitationUsage;
}

export class VppInvitationSchemasJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class VppInvitationSchemasJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class VppInvitationUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class VppInvitationUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => VppInvitationUserGroup)
    userGroup?: VppInvitationUserGroup;
}

export class VppInvitationExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: VppInvitationSchemasJssUserGroups })
    @Expose({ name: "jss_user_groups" })
    @Type(() => VppInvitationSchemasJssUserGroups)
    jssUserGroups?: VppInvitationSchemasJssUserGroups[];

    @SpeakeasyMetadata({ elemType: VppInvitationSchemasJssUsers })
    @Expose({ name: "jss_users" })
    @Type(() => VppInvitationSchemasJssUsers)
    jssUsers?: VppInvitationSchemasJssUsers[];

    @SpeakeasyMetadata({ elemType: VppInvitationUserGroups })
    @Expose({ name: "user_groups" })
    @Type(() => VppInvitationUserGroups)
    userGroups?: VppInvitationUserGroups[];
}

export class VppInvitationJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class VppInvitationJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class VppInvitationSchemasUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class VppInvitationLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: VppInvitationSchemasUserGroups })
    @Expose({ name: "user_groups" })
    @Type(() => VppInvitationSchemasUserGroups)
    userGroups?: VppInvitationSchemasUserGroups[];
}

export class VppInvitationScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "all_jss_users" })
    allJssUsers?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "exclusions" })
    @Type(() => VppInvitationExclusions)
    exclusions?: VppInvitationExclusions;

    @SpeakeasyMetadata({ elemType: VppInvitationJssUserGroups })
    @Expose({ name: "jss_user_groups" })
    @Type(() => VppInvitationJssUserGroups)
    jssUserGroups?: VppInvitationJssUserGroups[];

    @SpeakeasyMetadata({ elemType: VppInvitationJssUsers })
    @Expose({ name: "jss_users" })
    @Type(() => VppInvitationJssUsers)
    jssUsers?: VppInvitationJssUsers[];

    @SpeakeasyMetadata()
    @Expose({ name: "limitations" })
    @Type(() => VppInvitationLimitations)
    limitations?: VppInvitationLimitations;
}

export class VppInvitation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => VppInvitationGeneral)
    general?: VppInvitationGeneral;

    @SpeakeasyMetadata({ elemType: InvitationUsage })
    @Expose({ name: "invitation_usage" })
    @Type(() => InvitationUsage)
    invitationUsage?: InvitationUsage[];

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    @Type(() => VppInvitationScope)
    scope?: VppInvitationScope;
}
