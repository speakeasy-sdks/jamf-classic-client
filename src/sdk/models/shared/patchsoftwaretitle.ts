/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CategoryObject } from "./categoryobject";
import { Expose, Type } from "class-transformer";

export class Notifications extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email_notification" })
    emailNotification?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "web_notification" })
    webNotification?: boolean;
}

export class PatchSoftwareTitlePackage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class PatchSoftwareTitleVersion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    @Type(() => PatchSoftwareTitlePackage)
    package?: PatchSoftwareTitlePackage;

    @SpeakeasyMetadata()
    @Expose({ name: "software_version" })
    softwareVersion?: string;
}

export class PatchSoftwareTitleVersions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    @Type(() => PatchSoftwareTitleVersion)
    version?: PatchSoftwareTitleVersion;
}

export class PatchSoftwareTitle extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "categories" })
    @Type(() => CategoryObject)
    categories?: CategoryObject;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name_id" })
    nameId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notifications" })
    @Type(() => Notifications)
    notifications?: Notifications;

    @SpeakeasyMetadata()
    @Expose({ name: "source_id" })
    sourceId?: number;

    @SpeakeasyMetadata({ elemType: PatchSoftwareTitleVersions })
    @Expose({ name: "versions" })
    @Type(() => PatchSoftwareTitleVersions)
    versions?: PatchSoftwareTitleVersions[];
}
