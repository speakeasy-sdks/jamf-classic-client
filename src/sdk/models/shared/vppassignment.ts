/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IdName } from "./idname";
import { Expose, Type } from "class-transformer";

export class VppAssignmentEbooksEbook extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "adam_id" })
    adamId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class VppAssignmentEbooks extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "ebook" })
    @Type(() => VppAssignmentEbooksEbook)
    ebook?: VppAssignmentEbooksEbook;
}

export class VppAssignmentGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "vpp_admin_account_id" })
    vppAdminAccountId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "vpp_admin_account_name" })
    vppAdminAccountName?: string;
}

export class VppAssignmentIosAppsIosApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "adam_id" })
    adamId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class VppAssignmentIosApps extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "ios_app" })
    @Type(() => VppAssignmentIosAppsIosApp)
    iosApp?: VppAssignmentIosAppsIosApp;
}

export class VppAssignmentMacAppsMacApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "adam_id" })
    adamId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class VppAssignmentMacApps extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mac_app" })
    @Type(() => VppAssignmentMacAppsMacApp)
    macApp?: VppAssignmentMacAppsMacApp;
}

export class VppAssignmentScopeExclusionsJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class VppAssignmentScopeExclusionsJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class VppAssignmentScopeExclusionsUserGroupsUserGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class VppAssignmentScopeExclusionsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => VppAssignmentScopeExclusionsUserGroupsUserGroup)
    userGroup?: VppAssignmentScopeExclusionsUserGroupsUserGroup;
}

export class VppAssignmentScopeExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: VppAssignmentScopeExclusionsJssUserGroups })
    @Expose({ name: "jss_user_groups" })
    @Type(() => VppAssignmentScopeExclusionsJssUserGroups)
    jssUserGroups?: VppAssignmentScopeExclusionsJssUserGroups[];

    @SpeakeasyMetadata({ elemType: VppAssignmentScopeExclusionsJssUsers })
    @Expose({ name: "jss_users" })
    @Type(() => VppAssignmentScopeExclusionsJssUsers)
    jssUsers?: VppAssignmentScopeExclusionsJssUsers[];

    @SpeakeasyMetadata({ elemType: VppAssignmentScopeExclusionsUserGroups })
    @Expose({ name: "user_groups" })
    @Type(() => VppAssignmentScopeExclusionsUserGroups)
    userGroups?: VppAssignmentScopeExclusionsUserGroups[];
}

export class VppAssignmentScopeJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class VppAssignmentScopeJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class VppAssignmentScopeLimitationsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class VppAssignmentScopeLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: VppAssignmentScopeLimitationsUserGroups })
    @Expose({ name: "user_groups" })
    @Type(() => VppAssignmentScopeLimitationsUserGroups)
    userGroups?: VppAssignmentScopeLimitationsUserGroups[];
}

export class VppAssignmentScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "all_jss_users" })
    allJssUsers?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "exclusions" })
    @Type(() => VppAssignmentScopeExclusions)
    exclusions?: VppAssignmentScopeExclusions;

    @SpeakeasyMetadata({ elemType: VppAssignmentScopeJssUserGroups })
    @Expose({ name: "jss_user_groups" })
    @Type(() => VppAssignmentScopeJssUserGroups)
    jssUserGroups?: VppAssignmentScopeJssUserGroups[];

    @SpeakeasyMetadata({ elemType: VppAssignmentScopeJssUsers })
    @Expose({ name: "jss_users" })
    @Type(() => VppAssignmentScopeJssUsers)
    jssUsers?: VppAssignmentScopeJssUsers[];

    @SpeakeasyMetadata()
    @Expose({ name: "limitations" })
    @Type(() => VppAssignmentScopeLimitations)
    limitations?: VppAssignmentScopeLimitations;
}

/**
 * OK
 */
export class VppAssignment extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: VppAssignmentEbooks })
    @Expose({ name: "ebooks" })
    @Type(() => VppAssignmentEbooks)
    ebooks?: VppAssignmentEbooks[];

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => VppAssignmentGeneral)
    general?: VppAssignmentGeneral;

    @SpeakeasyMetadata({ elemType: VppAssignmentIosApps })
    @Expose({ name: "ios_apps" })
    @Type(() => VppAssignmentIosApps)
    iosApps?: VppAssignmentIosApps[];

    @SpeakeasyMetadata({ elemType: VppAssignmentMacApps })
    @Expose({ name: "mac_apps" })
    @Type(() => VppAssignmentMacApps)
    macApps?: VppAssignmentMacApps[];

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    @Type(() => VppAssignmentScope)
    scope?: VppAssignmentScope;
}
