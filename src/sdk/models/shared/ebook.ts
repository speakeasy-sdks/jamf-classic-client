/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CategoryObject } from "./categoryobject";
import { IdName } from "./idname";
import { SiteObject } from "./siteobject";
import { Expose, Type } from "class-transformer";

export enum EbookGeneralDeploymentType {
    MakeAvailableInSelfService = "Make Available in Self Service",
    InstallAutomaticallyPromptUsersToInstall = "Install Automatically/Prompt Users to Install",
}

export enum EbookGeneralFileType {
    Pdf = "PDF",
    Ibook = "IBOOK",
    Epub = "EPUB",
}

export class EbookGeneralSelfServiceIcon extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    data?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class EbookGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "author" })
    author?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    @Type(() => CategoryObject)
    category?: CategoryObject;

    @SpeakeasyMetadata()
    @Expose({ name: "deploy_as_managed" })
    deployAsManaged?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "deployment_type" })
    deploymentType?: EbookGeneralDeploymentType;

    @SpeakeasyMetadata()
    @Expose({ name: "file_type" })
    fileType?: EbookGeneralFileType;

    @SpeakeasyMetadata()
    @Expose({ name: "free" })
    free?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the ebook
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_icon" })
    @Type(() => EbookGeneralSelfServiceIcon)
    selfServiceIcon?: EbookGeneralSelfServiceIcon;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => SiteObject)
    site?: SiteObject;

    /**
     * Download URL for the ebook
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}

export class EbookScopeBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => IdName)
    building?: IdName;
}

export class EbookScopeClasses extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "class" })
    @Type(() => IdName)
    class?: IdName;
}

export class EbookScopeComputerGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer_group" })
    @Type(() => IdName)
    computerGroup?: IdName;
}

export class EbookScopeComputersComputer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the computer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class EbookScopeComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => EbookScopeComputersComputer)
    computer?: EbookScopeComputersComputer;
}

export class EbookScopeDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => IdName)
    department?: IdName;
}

export class EbookScopeExclusionsBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => IdName)
    building?: IdName;
}

export class EbookScopeExclusionsComputerGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer_group" })
    @Type(() => IdName)
    computerGroup?: IdName;
}

export class EbookScopeExclusionsComputersComputer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the computer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class EbookScopeExclusionsComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => EbookScopeExclusionsComputersComputer)
    computer?: EbookScopeExclusionsComputersComputer;
}

export class EbookScopeExclusionsDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => IdName)
    department?: IdName;
}

export class EbookScopeExclusionsJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class EbookScopeExclusionsJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class EbookScopeExclusionsMobileDeviceGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device_group" })
    @Type(() => IdName)
    mobileDeviceGroup?: IdName;
}

export class EbookScopeExclusionsMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "wifi_mac_address" })
    wifiMacAddress?: string;
}

export class EbookScopeExclusionsMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device" })
    @Type(() => EbookScopeExclusionsMobileDevicesMobileDevice)
    mobileDevice?: EbookScopeExclusionsMobileDevicesMobileDevice;
}

export class EbookScopeExclusionsNetworkSegmentsNetworkSegment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the network segment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uid" })
    uid?: string;
}

export class EbookScopeExclusionsNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "network_segment" })
    @Type(() => EbookScopeExclusionsNetworkSegmentsNetworkSegment)
    networkSegment?: EbookScopeExclusionsNetworkSegmentsNetworkSegment;
}

export class EbookScopeExclusionsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class EbookScopeExclusionsUsersUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class EbookScopeExclusionsUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => EbookScopeExclusionsUsersUser)
    user?: EbookScopeExclusionsUsersUser;
}

export class EbookScopeExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsBuildings })
    @Expose({ name: "buildings" })
    @Type(() => EbookScopeExclusionsBuildings)
    buildings?: EbookScopeExclusionsBuildings[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsComputerGroups })
    @Expose({ name: "computer_groups" })
    @Type(() => EbookScopeExclusionsComputerGroups)
    computerGroups?: EbookScopeExclusionsComputerGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsComputers })
    @Expose({ name: "computers" })
    @Type(() => EbookScopeExclusionsComputers)
    computers?: EbookScopeExclusionsComputers[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsDepartments })
    @Expose({ name: "departments" })
    @Type(() => EbookScopeExclusionsDepartments)
    departments?: EbookScopeExclusionsDepartments[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsJssUserGroups })
    @Expose({ name: "jss_user_groups" })
    @Type(() => EbookScopeExclusionsJssUserGroups)
    jssUserGroups?: EbookScopeExclusionsJssUserGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsJssUsers })
    @Expose({ name: "jss_users" })
    @Type(() => EbookScopeExclusionsJssUsers)
    jssUsers?: EbookScopeExclusionsJssUsers[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsMobileDeviceGroups })
    @Expose({ name: "mobile_device_groups" })
    @Type(() => EbookScopeExclusionsMobileDeviceGroups)
    mobileDeviceGroups?: EbookScopeExclusionsMobileDeviceGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsMobileDevices })
    @Expose({ name: "mobile_devices" })
    @Type(() => EbookScopeExclusionsMobileDevices)
    mobileDevices?: EbookScopeExclusionsMobileDevices[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsNetworkSegments })
    @Expose({ name: "network_segments" })
    @Type(() => EbookScopeExclusionsNetworkSegments)
    networkSegments?: EbookScopeExclusionsNetworkSegments[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsUserGroups })
    @Expose({ name: "user_groups" })
    @Type(() => EbookScopeExclusionsUserGroups)
    userGroups?: EbookScopeExclusionsUserGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeExclusionsUsers })
    @Expose({ name: "users" })
    @Type(() => EbookScopeExclusionsUsers)
    users?: EbookScopeExclusionsUsers[];
}

export class EbookScopeJssUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class EbookScopeJssUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class EbookScopeLimitationsNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "network_segment" })
    @Type(() => IdName)
    networkSegment?: IdName;
}

export class EbookScopeLimitationsUserGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user_group" })
    @Type(() => IdName)
    userGroup?: IdName;
}

export class EbookScopeLimitationsUsers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => IdName)
    user?: IdName;
}

export class EbookScopeLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: EbookScopeLimitationsNetworkSegments })
    @Expose({ name: "network_segments" })
    @Type(() => EbookScopeLimitationsNetworkSegments)
    networkSegments?: EbookScopeLimitationsNetworkSegments[];

    @SpeakeasyMetadata({ elemType: EbookScopeLimitationsUserGroups })
    @Expose({ name: "user_groups" })
    @Type(() => EbookScopeLimitationsUserGroups)
    userGroups?: EbookScopeLimitationsUserGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeLimitationsUsers })
    @Expose({ name: "users" })
    @Type(() => EbookScopeLimitationsUsers)
    users?: EbookScopeLimitationsUsers[];
}

export class EbookScopeMobileDeviceGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device_group" })
    @Type(() => IdName)
    mobileDeviceGroup?: IdName;
}

export class EbookScopeMobileDevicesMobileDevice extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "wifi_mac_address" })
    wifiMacAddress?: string;
}

export class EbookScopeMobileDevices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "mobile_device" })
    @Type(() => EbookScopeMobileDevicesMobileDevice)
    mobileDevice?: EbookScopeMobileDevicesMobileDevice;
}

export class EbookScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "all_computers" })
    allComputers?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "all_jss_users" })
    allJssUsers?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "all_mobile_devices" })
    allMobileDevices?: boolean;

    @SpeakeasyMetadata({ elemType: EbookScopeBuildings })
    @Expose({ name: "buildings" })
    @Type(() => EbookScopeBuildings)
    buildings?: EbookScopeBuildings[];

    @SpeakeasyMetadata({ elemType: EbookScopeClasses })
    @Expose({ name: "classes" })
    @Type(() => EbookScopeClasses)
    classes?: EbookScopeClasses[];

    @SpeakeasyMetadata({ elemType: EbookScopeComputerGroups })
    @Expose({ name: "computer_groups" })
    @Type(() => EbookScopeComputerGroups)
    computerGroups?: EbookScopeComputerGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeComputers })
    @Expose({ name: "computers" })
    @Type(() => EbookScopeComputers)
    computers?: EbookScopeComputers[];

    @SpeakeasyMetadata({ elemType: EbookScopeDepartments })
    @Expose({ name: "departments" })
    @Type(() => EbookScopeDepartments)
    departments?: EbookScopeDepartments[];

    @SpeakeasyMetadata()
    @Expose({ name: "exclusions" })
    @Type(() => EbookScopeExclusions)
    exclusions?: EbookScopeExclusions;

    @SpeakeasyMetadata({ elemType: EbookScopeJssUserGroups })
    @Expose({ name: "jss_user_groups" })
    @Type(() => EbookScopeJssUserGroups)
    jssUserGroups?: EbookScopeJssUserGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeJssUsers })
    @Expose({ name: "jss_users" })
    @Type(() => EbookScopeJssUsers)
    jssUsers?: EbookScopeJssUsers[];

    @SpeakeasyMetadata()
    @Expose({ name: "limitations" })
    @Type(() => EbookScopeLimitations)
    limitations?: EbookScopeLimitations;

    @SpeakeasyMetadata({ elemType: EbookScopeMobileDeviceGroups })
    @Expose({ name: "mobile_device_groups" })
    @Type(() => EbookScopeMobileDeviceGroups)
    mobileDeviceGroups?: EbookScopeMobileDeviceGroups[];

    @SpeakeasyMetadata({ elemType: EbookScopeMobileDevices })
    @Expose({ name: "mobile_devices" })
    @Type(() => EbookScopeMobileDevices)
    mobileDevices?: EbookScopeMobileDevices[];
}

export class EbookSelfServiceSelfServiceCategoriesCategory extends SpeakeasyBase {
    /**
     * Self Service categories to be displayed ebook in
     */
    @SpeakeasyMetadata()
    @Expose({ name: "display_in" })
    displayIn?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "feature_in" })
    featureIn?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Name of the category
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class EbookSelfServiceSelfServiceCategories extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    @Type(() => EbookSelfServiceSelfServiceCategoriesCategory)
    category?: EbookSelfServiceSelfServiceCategoriesCategory;
}

export class EbookSelfServiceSelfServiceIcon extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    data?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class EbookSelfService extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "feature_on_main_page" })
    featureOnMainPage?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "force_users_to_view_description" })
    forceUsersToViewDescription?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "install_button_text" })
    installButtonText?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notification" })
    notification?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_message" })
    notificationMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_subject" })
    notificationSubject?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_categories" })
    @Type(() => EbookSelfServiceSelfServiceCategories)
    selfServiceCategories?: EbookSelfServiceSelfServiceCategories;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_description" })
    selfServiceDescription?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_display_name" })
    selfServiceDisplayName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_icon" })
    @Type(() => EbookSelfServiceSelfServiceIcon)
    selfServiceIcon?: EbookSelfServiceSelfServiceIcon;
}

/**
 * OK
 */
export class Ebook extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => EbookGeneral)
    general?: EbookGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    @Type(() => EbookScope)
    scope?: EbookScope;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service" })
    @Type(() => EbookSelfService)
    selfService?: EbookSelfService;
}
