/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CategoryObject } from "./categoryobject";
import { SiteObject } from "./siteobject";
import { Expose, Type } from "class-transformer";

export enum PolicyPostGeneralFrequency {
    OncePerComputer = "Once per computer",
    OncePerUserPerComputer = "Once per user per computer",
    OncePerUser = "Once per user",
    OnceEveryDay = "Once every day",
    OnceEveryWeek = "Once every week",
    OnceEveryMonth = "Once every month",
    Ongoing = "Ongoing",
}

export enum PolicyPostGeneralNetworkLimitationsMinimumNetworkConnection {
    NoMinimum = "No Minimum",
    Ethernet = "Ethernet",
}

export class PolicyPostGeneralNetworkLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "any_ip_address" })
    anyIpAddress?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "minimum_network_connection" })
    minimumNetworkConnection?: PolicyPostGeneralNetworkLimitationsMinimumNetworkConnection;
}

export enum PolicyPostGeneralNetworkRequirements {
    Any = "Any",
    Ethernet = "Ethernet",
}

export class PolicyPostGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    @Type(() => CategoryObject)
    category?: CategoryObject;

    @SpeakeasyMetadata()
    @Expose({ name: "enabled" })
    enabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "frequency" })
    frequency?: PolicyPostGeneralFrequency;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "location_user_only" })
    locationUserOnly?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "network_limitations" })
    @Type(() => PolicyPostGeneralNetworkLimitations)
    networkLimitations?: PolicyPostGeneralNetworkLimitations;

    @SpeakeasyMetadata()
    @Expose({ name: "network_requirements" })
    networkRequirements?: PolicyPostGeneralNetworkRequirements;

    @SpeakeasyMetadata()
    @Expose({ name: "offline" })
    offline?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "site" })
    @Type(() => SiteObject)
    site?: SiteObject;

    @SpeakeasyMetadata()
    @Expose({ name: "target_drive" })
    targetDrive?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger" })
    trigger?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_checkin" })
    triggerCheckin?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_enrollment_complete" })
    triggerEnrollmentComplete?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_login" })
    triggerLogin?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_logout" })
    triggerLogout?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_network_state_changed" })
    triggerNetworkStateChanged?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_other" })
    triggerOther?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger_startup" })
    triggerStartup?: boolean;
}

export class PolicyPost extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => PolicyPostGeneral)
    general?: PolicyPostGeneral;
}
