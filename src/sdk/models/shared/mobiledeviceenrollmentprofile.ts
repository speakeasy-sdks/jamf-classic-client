/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attachment } from "./attachment";
import { Location } from "./location";
import { Purchasing } from "./purchasing";
import { Expose, Type } from "class-transformer";

export class MobileDeviceEnrollmentProfileAttachments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "attachment" })
    @Type(() => Attachment)
    attachment?: Attachment;
}

export class MobileDeviceEnrollmentProfileGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "invitation" })
    invitation?: string;

    /**
     * Name of the enrollment profile
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

/**
 * OK
 */
export class MobileDeviceEnrollmentProfile extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: MobileDeviceEnrollmentProfileAttachments })
    @Expose({ name: "attachments" })
    @Type(() => MobileDeviceEnrollmentProfileAttachments)
    attachments?: MobileDeviceEnrollmentProfileAttachments[];

    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => MobileDeviceEnrollmentProfileGeneral)
    general?: MobileDeviceEnrollmentProfileGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "location" })
    @Type(() => Location)
    location?: Location;

    @SpeakeasyMetadata()
    @Expose({ name: "purchasing" })
    @Type(() => Purchasing)
    purchasing?: Purchasing;
}
