/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class PeripheralTypeFieldsFieldChoices extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "choice" })
    choice?: string;
}

export enum PeripheralTypeFieldsFieldType {
    Menu = "menu",
    Text = "text",
}

export class PeripheralTypeFieldsField extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: PeripheralTypeFieldsFieldChoices })
    @Expose({ name: "choices" })
    @Type(() => PeripheralTypeFieldsFieldChoices)
    choices?: PeripheralTypeFieldsFieldChoices[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "order" })
    order?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: PeripheralTypeFieldsFieldType;
}

export class PeripheralTypeFields extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "field" })
    @Type(() => PeripheralTypeFieldsField)
    field?: PeripheralTypeFieldsField;
}

/**
 * OK
 */
export class PeripheralType extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: PeripheralTypeFields })
    @Expose({ name: "fields" })
    @Type(() => PeripheralTypeFields)
    fields?: PeripheralTypeFields[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}
