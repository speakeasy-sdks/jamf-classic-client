/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IdName } from "./idname";
import { Expose, Type } from "class-transformer";

export enum PatchPolicyDistributionMethod {
    Selfservice = "selfservice",
    Prompt = "prompt",
}

export class KillApp extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "kill_app_bundle_id" })
    killAppBundleId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "kill_app_name" })
    killAppName?: string;
}

export class KillApps extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "kill_app" })
    @Type(() => KillApp)
    killApp?: KillApp;
}

export class PatchPolicyGeneral extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "allow_downgrade" })
    allowDowngrade?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "distribution_method" })
    distributionMethod?: PatchPolicyDistributionMethod;

    @SpeakeasyMetadata()
    @Expose({ name: "enabled" })
    enabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "incremental_updates" })
    incrementalUpdates?: boolean;

    @SpeakeasyMetadata({ elemType: KillApps })
    @Expose({ name: "kill_apps" })
    @Type(() => KillApps)
    killApps?: KillApps[];

    @SpeakeasyMetadata()
    @Expose({ name: "minimum_os" })
    minimumOs?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Set to true to patch versions unidentified by Jamf Pro patch reporting
     */
    @SpeakeasyMetadata()
    @Expose({ name: "patch_unknown" })
    patchUnknown?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "reboot" })
    reboot?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "release_date" })
    releaseDate?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "target_version" })
    targetVersion: string;
}

export class PatchPolicyBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => IdName)
    building?: IdName;
}

export class PatchPolicyComputerGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer_group" })
    @Type(() => IdName)
    computerGroup?: IdName;
}

export class PatchPolicyComputer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class PatchPolicyComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => PatchPolicyComputer)
    computer?: PatchPolicyComputer;
}

export class PatchPolicyDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => IdName)
    department?: IdName;
}

export class PatchPolicySchemasBuildings extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "building" })
    @Type(() => IdName)
    building?: IdName;
}

export class PatchPolicySchemasComputerGroups extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer_group" })
    @Type(() => IdName)
    computerGroup?: IdName;
}

export class PatchPolicySchemasComputer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "udid" })
    udid?: string;
}

export class PatchPolicySchemasComputers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "computer" })
    @Type(() => PatchPolicySchemasComputer)
    computer?: PatchPolicySchemasComputer;
}

export class PatchPolicySchemasDepartments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    @Type(() => IdName)
    department?: IdName;
}

export class PatchPolicyIbeacons extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "ibeacon" })
    @Type(() => IdName)
    ibeacon?: IdName;
}

export class PatchPolicyNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "network_segment" })
    @Type(() => IdName)
    networkSegment?: IdName;
}

export class PatchPolicyExclusions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: PatchPolicySchemasBuildings })
    @Expose({ name: "buildings" })
    @Type(() => PatchPolicySchemasBuildings)
    buildings?: PatchPolicySchemasBuildings[];

    @SpeakeasyMetadata({ elemType: PatchPolicySchemasComputerGroups })
    @Expose({ name: "computer_groups" })
    @Type(() => PatchPolicySchemasComputerGroups)
    computerGroups?: PatchPolicySchemasComputerGroups[];

    @SpeakeasyMetadata({ elemType: PatchPolicySchemasComputers })
    @Expose({ name: "computers" })
    @Type(() => PatchPolicySchemasComputers)
    computers?: PatchPolicySchemasComputers[];

    @SpeakeasyMetadata({ elemType: PatchPolicySchemasDepartments })
    @Expose({ name: "departments" })
    @Type(() => PatchPolicySchemasDepartments)
    departments?: PatchPolicySchemasDepartments[];

    @SpeakeasyMetadata({ elemType: PatchPolicyIbeacons })
    @Expose({ name: "ibeacons" })
    @Type(() => PatchPolicyIbeacons)
    ibeacons?: PatchPolicyIbeacons[];

    @SpeakeasyMetadata({ elemType: PatchPolicyNetworkSegments })
    @Expose({ name: "network_segments" })
    @Type(() => PatchPolicyNetworkSegments)
    networkSegments?: PatchPolicyNetworkSegments[];
}

export class PatchPolicySchemasIbeacons extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "ibeacon" })
    @Type(() => IdName)
    ibeacon?: IdName;
}

export class PatchPolicySchemasNetworkSegments extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "network_segment" })
    @Type(() => IdName)
    networkSegment?: IdName;
}

export class PatchPolicyLimitations extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: PatchPolicySchemasIbeacons })
    @Expose({ name: "ibeacons" })
    @Type(() => PatchPolicySchemasIbeacons)
    ibeacons?: PatchPolicySchemasIbeacons[];

    @SpeakeasyMetadata({ elemType: PatchPolicySchemasNetworkSegments })
    @Expose({ name: "network_segments" })
    @Type(() => PatchPolicySchemasNetworkSegments)
    networkSegments?: PatchPolicySchemasNetworkSegments[];
}

export class PatchPolicyScope extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "all_computers" })
    allComputers?: boolean;

    @SpeakeasyMetadata({ elemType: PatchPolicyBuildings })
    @Expose({ name: "buildings" })
    @Type(() => PatchPolicyBuildings)
    buildings?: PatchPolicyBuildings[];

    @SpeakeasyMetadata({ elemType: PatchPolicyComputerGroups })
    @Expose({ name: "computer_groups" })
    @Type(() => PatchPolicyComputerGroups)
    computerGroups?: PatchPolicyComputerGroups[];

    @SpeakeasyMetadata({ elemType: PatchPolicyComputers })
    @Expose({ name: "computers" })
    @Type(() => PatchPolicyComputers)
    computers?: PatchPolicyComputers[];

    @SpeakeasyMetadata({ elemType: PatchPolicyDepartments })
    @Expose({ name: "departments" })
    @Type(() => PatchPolicyDepartments)
    departments?: PatchPolicyDepartments[];

    @SpeakeasyMetadata()
    @Expose({ name: "exclusions" })
    @Type(() => PatchPolicyExclusions)
    exclusions?: PatchPolicyExclusions;

    @SpeakeasyMetadata()
    @Expose({ name: "limitations" })
    @Type(() => PatchPolicyLimitations)
    limitations?: PatchPolicyLimitations;
}

export class Deadlines extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "deadline_enabled" })
    deadlineEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "deadline_period" })
    deadlinePeriod?: number;
}

export class GracePeriod extends SpeakeasyBase {
    /**
     * Number of minutes to wait before automatically closing all apps required to be closed for an update
     */
    @SpeakeasyMetadata()
    @Expose({ name: "grace_period_duration" })
    gracePeriodDuration?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_center_subject" })
    notificationCenterSubject?: string;
}

export enum NotificationType {
    SelfService = "Self Service",
    SelfServiceAndNotificationCenter = "Self Service and Notification Center",
}

export class Reminders extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "notification_reminder_frequency" })
    notificationReminderFrequency?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_reminders_enabled" })
    notificationRemindersEnabled?: boolean;
}

export class PatchPolicyNotifications extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "notification_enabled" })
    notificationEnabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_message" })
    notificationMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_subject" })
    notificationSubject?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notification_type" })
    notificationType?: NotificationType;

    @SpeakeasyMetadata()
    @Expose({ name: "reminders" })
    @Type(() => Reminders)
    reminders?: Reminders;
}

export class PatchPolicySelfServiceIcon extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "filename" })
    filename?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}

export class UserInteraction extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "deadlines" })
    @Type(() => Deadlines)
    deadlines?: Deadlines;

    @SpeakeasyMetadata()
    @Expose({ name: "grace_period" })
    @Type(() => GracePeriod)
    gracePeriod?: GracePeriod;

    @SpeakeasyMetadata()
    @Expose({ name: "install_button_text" })
    installButtonText?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notifications" })
    @Type(() => PatchPolicyNotifications)
    notifications?: PatchPolicyNotifications;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_description" })
    selfServiceDescription?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "self_service_icon" })
    @Type(() => PatchPolicySelfServiceIcon)
    selfServiceIcon?: PatchPolicySelfServiceIcon;
}

export class PatchPolicy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "general" })
    @Type(() => PatchPolicyGeneral)
    general?: PatchPolicyGeneral;

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    @Type(() => PatchPolicyScope)
    scope?: PatchPolicyScope;

    @SpeakeasyMetadata()
    @Expose({ name: "software_title_configuration_id" })
    softwareTitleConfigurationId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user_interaction" })
    @Type(() => UserInteraction)
    userInteraction?: UserInteraction;
}
